{"version":3,"file":"libjass.js.map","sources":["utility.ts","parts.ts","parser.ts","renderer.ts","types.ts"],"names":["libjass","libjass.SimpleSet","libjass.SimpleSet.constructor","libjass.SimpleSet.add","libjass.SimpleSet.clear","libjass.SimpleSet.has","libjass.SimpleSet.forEach","libjass.SimpleSet.delete","libjass.SimpleSet._toProperty","libjass.SimpleMap","libjass.SimpleMap.constructor","libjass.SimpleMap.get","libjass.SimpleMap.has","libjass.SimpleMap.set","libjass.SimpleMap.delete","libjass.SimpleMap.clear","libjass.SimpleMap.forEach","libjass.SimpleMap._keyToProperty","libjass.parts","libjass.parts.Color","libjass.parts.Color.constructor","libjass.parts.Color.withAlpha","libjass.parts.Color.toString","libjass.parts.Comment","libjass.parts.Comment.constructor","libjass.parts.Text","libjass.parts.Text.constructor","libjass.parts.Text.toString","libjass.parts.NewLine","libjass.parts.Italic","libjass.parts.Italic.constructor","libjass.parts.Bold","libjass.parts.Bold.constructor","libjass.parts.Underline","libjass.parts.Underline.constructor","libjass.parts.StrikeThrough","libjass.parts.StrikeThrough.constructor","libjass.parts.Border","libjass.parts.Border.constructor","libjass.parts.BorderX","libjass.parts.BorderX.constructor","libjass.parts.BorderY","libjass.parts.BorderY.constructor","libjass.parts.Shadow","libjass.parts.Shadow.constructor","libjass.parts.ShadowX","libjass.parts.ShadowX.constructor","libjass.parts.ShadowY","libjass.parts.ShadowY.constructor","libjass.parts.Blur","libjass.parts.Blur.constructor","libjass.parts.GaussianBlur","libjass.parts.GaussianBlur.constructor","libjass.parts.FontName","libjass.parts.FontName.constructor","libjass.parts.FontSize","libjass.parts.FontSize.constructor","libjass.parts.FontScaleX","libjass.parts.FontScaleX.constructor","libjass.parts.FontScaleY","libjass.parts.FontScaleY.constructor","libjass.parts.LetterSpacing","libjass.parts.LetterSpacing.constructor","libjass.parts.RotateX","libjass.parts.RotateX.constructor","libjass.parts.RotateY","libjass.parts.RotateY.constructor","libjass.parts.RotateZ","libjass.parts.RotateZ.constructor","libjass.parts.SkewX","libjass.parts.SkewX.constructor","libjass.parts.SkewY","libjass.parts.SkewY.constructor","libjass.parts.PrimaryColor","libjass.parts.PrimaryColor.constructor","libjass.parts.SecondaryColor","libjass.parts.SecondaryColor.constructor","libjass.parts.OutlineColor","libjass.parts.OutlineColor.constructor","libjass.parts.ShadowColor","libjass.parts.ShadowColor.constructor","libjass.parts.Alpha","libjass.parts.Alpha.constructor","libjass.parts.PrimaryAlpha","libjass.parts.PrimaryAlpha.constructor","libjass.parts.SecondaryAlpha","libjass.parts.SecondaryAlpha.constructor","libjass.parts.OutlineAlpha","libjass.parts.OutlineAlpha.constructor","libjass.parts.ShadowAlpha","libjass.parts.ShadowAlpha.constructor","libjass.parts.Alignment","libjass.parts.Alignment.constructor","libjass.parts.ColorKaraoke","libjass.parts.ColorKaraoke.constructor","libjass.parts.SweepingColorKaraoke","libjass.parts.SweepingColorKaraoke.constructor","libjass.parts.OutlineKaraoke","libjass.parts.OutlineKaraoke.constructor","libjass.parts.WrappingStyle","libjass.parts.WrappingStyle.constructor","libjass.parts.Reset","libjass.parts.Reset.constructor","libjass.parts.Position","libjass.parts.Position.constructor","libjass.parts.Move","libjass.parts.Move.constructor","libjass.parts.RotationOrigin","libjass.parts.RotationOrigin.constructor","libjass.parts.Fade","libjass.parts.Fade.constructor","libjass.parts.ComplexFade","libjass.parts.ComplexFade.constructor","libjass.parts.Transform","libjass.parts.Transform.constructor","libjass.parts.RectangularClip","libjass.parts.RectangularClip.constructor","libjass.parts.VectorClip","libjass.parts.VectorClip.constructor","libjass.parts.DrawingMode","libjass.parts.DrawingMode.constructor","libjass.parts.DrawingBaselineOffset","libjass.parts.DrawingBaselineOffset.constructor","libjass.parts.DrawingInstructions","libjass.parts.DrawingInstructions.constructor","libjass.parts.drawing","libjass.parts.drawing.MoveInstruction","libjass.parts.drawing.MoveInstruction.constructor","libjass.parts.drawing.LineInstruction","libjass.parts.drawing.LineInstruction.constructor","libjass.parts.drawing.CubicBezierCurveInstruction","libjass.parts.drawing.CubicBezierCurveInstruction.constructor","libjass.parser","libjass.parser.parse","libjass.parser.ParserRun","libjass.parser.ParserRun.constructor","libjass.parser.ParserRun.parse_script","libjass.parser.ParserRun.parse_scriptSection","libjass.parser.ParserRun.parse_scriptSectionHeader","libjass.parser.ParserRun.parse_scriptProperty","libjass.parser.ParserRun.parse_scriptComment","libjass.parser.ParserRun.parse_dialogueParts","libjass.parser.ParserRun.parse_enclosedTags","libjass.parser.ParserRun.parse_newline","libjass.parser.ParserRun.parse_hardspace","libjass.parser.ParserRun.parse_text","libjass.parser.ParserRun.parse_comment","libjass.parser.ParserRun.parse_tag_a","libjass.parser.ParserRun.parse_tag_alpha","libjass.parser.ParserRun.parse_tag_an","libjass.parser.ParserRun.parse_tag_b","libjass.parser.ParserRun.parse_tag_be","libjass.parser.ParserRun.parse_tag_blur","libjass.parser.ParserRun.parse_tag_bord","libjass.parser.ParserRun.parse_tag_c","libjass.parser.ParserRun.parse_tag_clip","libjass.parser.ParserRun.parse_tag_fad","libjass.parser.ParserRun.parse_tag_fade","libjass.parser.ParserRun.parse_tag_fax","libjass.parser.ParserRun.parse_tag_fay","libjass.parser.ParserRun.parse_tag_fn","libjass.parser.ParserRun.parse_tag_fr","libjass.parser.ParserRun.parse_tag_frx","libjass.parser.ParserRun.parse_tag_fry","libjass.parser.ParserRun.parse_tag_frz","libjass.parser.ParserRun.parse_tag_fs","libjass.parser.ParserRun.parse_tag_fscx","libjass.parser.ParserRun.parse_tag_fscy","libjass.parser.ParserRun.parse_tag_fsp","libjass.parser.ParserRun.parse_tag_i","libjass.parser.ParserRun.parse_tag_iclip","libjass.parser.ParserRun.parse_tag_k","libjass.parser.ParserRun.parse_tag_K","libjass.parser.ParserRun.parse_tag_kf","libjass.parser.ParserRun.parse_tag_ko","libjass.parser.ParserRun.parse_tag_move","libjass.parser.ParserRun.parse_tag_org","libjass.parser.ParserRun.parse_tag_p","libjass.parser.ParserRun.parse_tag_pbo","libjass.parser.ParserRun.parse_tag_pos","libjass.parser.ParserRun.parse_tag_q","libjass.parser.ParserRun.parse_tag_r","libjass.parser.ParserRun.parse_tag_s","libjass.parser.ParserRun.parse_tag_shad","libjass.parser.ParserRun.parse_tag_t","libjass.parser.ParserRun.parse_tag_u","libjass.parser.ParserRun.parse_tag_xbord","libjass.parser.ParserRun.parse_tag_xshad","libjass.parser.ParserRun.parse_tag_ybord","libjass.parser.ParserRun.parse_tag_yshad","libjass.parser.ParserRun.parse_tag_1a","libjass.parser.ParserRun.parse_tag_1c","libjass.parser.ParserRun.parse_tag_2a","libjass.parser.ParserRun.parse_tag_2c","libjass.parser.ParserRun.parse_tag_3a","libjass.parser.ParserRun.parse_tag_3c","libjass.parser.ParserRun.parse_tag_4a","libjass.parser.ParserRun.parse_tag_4c","libjass.parser.ParserRun.parse_drawingInstructions","libjass.parser.ParserRun.parse_drawingInstructionMove","libjass.parser.ParserRun.parse_drawingInstructionLine","libjass.parser.ParserRun.parse_drawingInstructionCubicBezierCurve","libjass.parser.ParserRun.parse_decimal","libjass.parser.ParserRun.parse_unsignedDecimal","libjass.parser.ParserRun.parse_enableDisable","libjass.parser.ParserRun.parse_hex","libjass.parser.ParserRun.parse_color","libjass.parser.ParserRun.parse_alpha","libjass.parser.ParserRun.parse_colorWithAlpha","libjass.parser.ParserRun.read","libjass.parser.ParserRun._peek","libjass.parser.ParserRun._haveMore","libjass.parser.ParserRun._parse_tag_clip_or_iclip","libjass.parser.makeTagParserFunction","libjass.parser.ParseNode","libjass.parser.ParseNode.constructor","libjass.parser.ParseNode.pop","libjass.parser.ParseNode._setEnd","libjass.renderers","libjass.renderers.NullRenderer","libjass.renderers.NullRenderer.constructor","libjass.renderers.NullRenderer.enable","libjass.renderers.NullRenderer.disable","libjass.renderers.NullRenderer.toggle","libjass.renderers.NullRenderer.onVideoPlaying","libjass.renderers.NullRenderer.onVideoPause","libjass.renderers.NullRenderer.onVideoTimeUpdate","libjass.renderers.NullRenderer._timerTick","libjass.renderers.NullRenderer._onVideoPlaying","libjass.renderers.NullRenderer._onVideoPause","libjass.renderers.NullRenderer._onVideoSeeking","libjass.renderers.NullRenderer._getStateLogString","libjass.renderers.RendererState","libjass.renderers.DefaultRenderer","libjass.renderers.DefaultRenderer.constructor","libjass.renderers.DefaultRenderer.addEventListener","libjass.renderers.DefaultRenderer.resize","libjass.renderers.DefaultRenderer.resizeVideo","libjass.renderers.DefaultRenderer.enable","libjass.renderers.DefaultRenderer.disable","libjass.renderers.DefaultRenderer.preRender","libjass.renderers.DefaultRenderer.draw","libjass.renderers.DefaultRenderer.onVideoPlaying","libjass.renderers.DefaultRenderer.onVideoPause","libjass.renderers.DefaultRenderer.onVideoTimeUpdate","libjass.renderers.DefaultRenderer._ready","libjass.renderers.DefaultRenderer._onFullScreenChange","libjass.renderers.DefaultRenderer._dispatchEvent","libjass.renderers.DefaultRenderer._removeSub","libjass.renderers.DefaultRenderer._removeAllSubs","libjass.renderers.DefaultRenderer._getTransformOrigin","libjass.renderers.RendererSettings","libjass.renderers.RendererSettings.makeFontMapFromStyleElement","libjass.renderers.RendererSettings.from","libjass.renderers.RendererSettings._from","libjass.renderers.RendererSettings._stripQuotes","libjass.renderers.Keyframe","libjass.renderers.Keyframe.constructor","libjass.renderers.AnimationCollection","libjass.renderers.AnimationCollection.constructor","libjass.renderers.AnimationCollection.addFadeIn","libjass.renderers.AnimationCollection.addFadeOut","libjass.renderers.AnimationCollection.addCustom","libjass.renderers.SpanStyles","libjass.renderers.SpanStyles.constructor","libjass.renderers.SpanStyles.reset","libjass.renderers.SpanStyles.setStylesOnSpan","libjass.renderers.SpanStyles._getFontSize","libjass.renderers.Drawing","libjass.renderers.Drawing.constructor","libjass.renderers.Drawing.toSVG","libjass.ASS","libjass.ASS.constructor","libjass.ASS.fromString","libjass.WrappingStyle","libjass.ScriptProperties","libjass.BorderStyle","libjass.Style","libjass.Style.constructor","libjass.Dialogue","libjass.Dialogue.constructor","libjass.Dialogue.toString","libjass.Dialogue._parsePartsString","libjass.Dialogue._toTime"],"mappings":"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","sourcesContent":["/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path=\"libjass.ts\" />\n\n\"use strict\";\n\nmodule libjass {\n\t/**\n\t * Set implementation for browsers that don't support it. Only supports Number and String elements.\n\t *\n\t * Elements are stored as properties of an object, with names derived from their type.\n\t *\n\t * @constructor\n\t * @template T\n\t *\n\t * @private\n\t * @memberof libjass\n\t */\n\tclass SimpleSet<T> implements Set<T> {\n\t\tprivate _elements: { [key: string]: T };\n\n\t\tconstructor() {\n\t\t\tthis.clear();\n\t\t}\n\n\t\t/**\n\t\t * @param {T} value\n\t\t * @return {libjass.Set.<T>} This set\n\t\t */\n\t\tadd(value: T): Set<T> {\n\t\t\tvar property = this._toProperty(value);\n\n\t\t\tif (property === null) {\n\t\t\t\tthrow new Error(\"This Set implementation only supports Number and String values.\");\n\t\t\t}\n\n\t\t\tthis._elements[property] = value;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t */\n\t\tclear(): void {\n\t\t\tthis._elements = Object.create(null);\n\t\t}\n\n\t\t/**\n\t\t * @param {T} value\n\t\t * @return {boolean}\n\t\t */\n\t\thas(value: T): boolean {\n\t\t\tvar property = this._toProperty(value);\n\n\t\t\tif (property === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn property in this._elements;\n\t\t}\n\n\t\t/**\n\t\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\n\t\t */\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tObject.keys(this._elements).map((property: string) => {\n\t\t\t\tvar element = this._elements[property];\n\t\t\t\tcallbackfn.call(thisArg, element, element, this);\n\t\t\t});\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tthrow new Error(\"This Set implementation doesn't support delete().\");\n\t\t}\n\n\t\tget size(): number {\n\t\t\tthrow new Error(\"This Set implementation doesn't support size.\");\n\t\t}\n\n\t\tprivate _toProperty(value: T): string {\n\t\t\tif (typeof value === \"number\") {\n\t\t\t\treturn \"#\" + value;\n\t\t\t}\n\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\treturn \"'\" + value;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Set to browser's implementation of Set if it has one, else set to libjass.SimpleSet\n\t *\n\t * @type {function(new:Set)}\n\t */\n\texport var Set: {\n\t\tnew <T>(): Set<T>;\n\t} = null;\n\n\t// Use this browser's implementation of Set if it has one\n\tif (global.Set !== undefined && typeof global.Set.prototype.forEach === \"function\") {\n\t\tSet = global.Set;\n\t}\n\telse {\n\t\tSet = SimpleSet;\n\t}\n\n\t/**\n\t * Map implementation for browsers that don't support it. Only supports keys which are of Number or String type, or which have a property called \"id\".\n\t *\n\t * Keys and values are stored as properties of an object, with property names derived from the key type.\n\t *\n\t * @constructor\n\t * @template K, V\n\t *\n\t * @private\n\t * @memberof libjass\n\t */\n\tclass SimpleMap<K, V> implements Map<K, V> {\n\t\tprivate _keys: { [key: string]: K };\n\t\tprivate _values: { [key: string]: V };\n\n\t\tconstructor() {\n\t\t\tthis.clear();\n\t\t}\n\n\t\t/**\n\t\t * @param {K} key\n\t\t * @return {V}\n\t\t */\n\t\tget(key: K): V {\n\t\t\tvar property = this._keyToProperty(key);\n\n\t\t\tif (property === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn this._values[property];\n\t\t}\n\n\t\t/**\n\t\t * @param {K} key\n\t\t * @return {boolean}\n\t\t */\n\t\thas(key: K): boolean {\n\t\t\tvar property = this._keyToProperty(key);\n\n\t\t\tif (property === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn property in this._keys;\n\t\t}\n\n\t\t/**\n\t\t * @param {K} key\n\t\t * @param {V} value\n\t\t * @return {libjass.Map.<K, V>} This map\n\t\t */\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tvar property = this._keyToProperty(key);\n\n\t\t\tif (property === null) {\n\t\t\t\tthrow new Error(\"This Map implementation only supports Number and String keys, or keys with an id property.\");\n\t\t\t}\n\n\t\t\tthis._keys[property] = key;\n\t\t\tthis._values[property] = value;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * @param {K} key\n\t\t * @return {boolean} true if the key was present before being deleted, false otherwise\n\t\t */\n\t\tdelete(key: K): boolean {\n\t\t\tvar property = this._keyToProperty(key);\n\n\t\t\tif (property === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar result = property in this._keys;\n\n\t\t\tif (result) {\n\t\t\t\tdelete this._keys[property];\n\t\t\t\tdelete this._values[property];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t */\n\t\tclear(): void {\n\t\t\tthis._keys = Object.create(null);\n\t\t\tthis._values = Object.create(null);\n\t\t}\n\n\t\t/**\n\t\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\n\t\t */\n\t\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\t\tvar keysArray = Object.keys(this._keys);\n\t\t\tfor (var i = 0; i < keysArray.length; i++) {\n\t\t\t\tvar property = keysArray[i];\n\t\t\t\tcallbackfn.call(thisArg, this._values[property], this._keys[property], this);\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\tthrow new Error(\"This Map implementation doesn't support size.\");\n\t\t}\n\n\t\tprivate _keyToProperty(key: K): string {\n\t\t\tif (typeof key === \"number\") {\n\t\t\t\treturn \"#\" + key;\n\t\t\t}\n\n\t\t\tif (typeof key === \"string\") {\n\t\t\t\treturn \"'\" + key;\n\t\t\t}\n\n\t\t\tif ((<any>key).id !== undefined) {\n\t\t\t\treturn \"!\" + (<any>key).id;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Set to browser's implementation of Map if it has one, else set to libjass.SimpleMap\n\t *\n\t * @type {function(new:Map)}\n\t */\n\texport var Map: {\n\t\tnew <K, V>(): Map<K, V>;\n\t} = null;\n\n\tdeclare var global: any; // Defined as a parameter of the anonymous function wrapper\n\n\t// Use this browser's implementation of Map if it has one\n\tif (global.Map !== undefined && typeof global.Map.prototype.forEach === \"function\") {\n\t\tMap = global.Map;\n\t}\n\telse {\n\t\tMap = <any>SimpleMap;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path=\"libjass.ts\" />\n\nmodule libjass.parts {\n\t/**\n\t * Represents a CSS color with red, green, blue and alpha components.\n\t *\n\t * Instances of this class are immutable.\n\t *\n\t * @constructor\n\t * @param {number} red\n\t * @param {number} green\n\t * @param {number} blue\n\t * @param {number=1} alpha\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Color {\n\t\tconstructor(private _red: number, private _green: number, private _blue: number, private _alpha: number = 1) { }\n\n\t\t/**\n\t\t * The red component of this color as a number between 0 and 255.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget red(): number {\n\t\t\treturn this._red;\n\t\t}\n\n\t\t/**\n\t\t * The green component of this color as a number between 0 and 255.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget green(): number {\n\t\t\treturn this._green;\n\t\t}\n\n\t\t/**\n\t\t * The blue component of this color as a number between 0 and 255.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget blue(): number {\n\t\t\treturn this._blue;\n\t\t}\n\n\t\t/**\n\t\t * The alpha component of this color as a number between 0 and 1, where 0 means transparent and 1 means opaque.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget alpha(): number {\n\t\t\treturn this._alpha;\n\t\t}\n\n\t\t/**\n\t\t * @param {?number} value The new alpha. If null, the existing alpha is used.\n\t\t * @return {!libjass.parts.Color} Returns a new Color instance with the same color but the provided alpha.\n\t\t */\n\t\twithAlpha(value: number): Color {\n\t\t\tif (value !== null) {\n\t\t\t\treturn new Color(this._red, this._green, this._blue, value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * @return {string} The CSS representation \"rgba(...)\" of this color.\n\t\t */\n\t\ttoString(): string {\n\t\t\treturn \"rgba(\" + this._red + \", \" + this._green + \", \" + this._blue + \", \" + this._alpha.toFixed(3) + \")\";\n\t\t}\n\t}\n\n\t/**\n\t * The base interface of the ASS tag classes.\n\t */\n\texport interface Part { }\n\n\t/**\n\t * A comment, i.e., any text enclosed in {} that is not understood as an ASS tag.\n\t *\n\t * @constructor\n\t * @param {string} value The text of this comment\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Comment {\n\t\tconstructor(private _value: string) { }\n\n\t\t/**\n\t\t * The value of this comment.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget value(): string {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A block of text, i.e., any text not enclosed in {}. Also includes \\h.\n\t *\n\t * @constructor\n\t * @param {string} value The content of this block of text\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Text {\n\t\tconstructor(private _value: string) { }\n\n\t\t/**\n\t\t * The value of this text part.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget value(): string {\n\t\t\treturn this._value;\n\t\t}\n\n\t\ttoString(): string {\n\t\t\treturn \"Text { value: \" + this._value.replace(/\\u00A0/g, \"\\\\h\") + \" }\";\n\t\t}\n\t}\n\n\t/**\n\t * A newline character \\N.\n\t *\n\t * @constructor\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class NewLine {\n\t}\n\n\t/**\n\t * An italic tag {\\i}\n\t *\n\t * @constructor\n\t * @param {?boolean} value {\\i1} -> true, {\\i0} -> false, {\\i} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Italic {\n\t\tconstructor(private _value: boolean) { }\n\n\t\t/**\n\t\t * The value of this italic tag.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tget value(): boolean {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A bold tag {\\b}\n\t *\n\t * @constructor\n\t * @param {*} value {\\b1} -> true, {\\b0} -> false, {\\b###} -> weight of the bold (number), {\\b} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Bold {\n\t\tconstructor(private _value: Object) { }\n\n\t\t/**\n\t\t * The value of this bold tag.\n\t\t *\n\t\t * @type {?boolean|?number}\n\t\t */\n\t\tget value(): Object {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An underline tag {\\u}\n\t *\n\t * @constructor\n\t * @param {?boolean} value {\\u1} -> true, {\\u0} -> false, {\\u} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Underline {\n\t\tconstructor(private _value: boolean) { }\n\n\t\t/**\n\t\t * The value of this underline tag.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tget value(): boolean {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A strike-through tag {\\s}\n\t *\n\t * @constructor\n\t * @param {?boolean} value {\\s1} -> true, {\\s0} -> false, {\\s} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class StrikeThrough {\n\t\tconstructor(private _value: boolean) { }\n\n\t\t/**\n\t\t * The value of this strike-through tag.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tget value(): boolean {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A border tag {\\bord}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\bord###} -> width (number), {\\bord} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Border {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this border tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A horizontal border tag {\\xbord}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\xbord###} -> width (number), {\\xbord} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class BorderX {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this horizontal border tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A vertical border tag {\\ybord}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\ybord###} -> height (number), {\\ybord} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class BorderY {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this vertical border tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A shadow tag {\\shad}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\shad###} -> depth (number), {\\shad} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Shadow {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this shadow tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A horizontal shadow tag {\\xshad}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\xshad###} -> depth (number), {\\xshad} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ShadowX {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this horizontal shadow tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A vertical shadow tag {\\yshad}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\yshad###} -> depth (number), {\\yshad} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ShadowY {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this vertical shadow tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A blur tag {\\be}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\be###} -> strength (number), {\\be} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Blur {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this blur tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A Gaussian blur tag {\\blur}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\blur###} -> strength (number), {\\blur} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class GaussianBlur {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this Gaussian blur tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A font name tag {\\fn}\n\t *\n\t * @constructor\n\t * @param {?string} value {\\fn###} -> name (string), {\\fn} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class FontName {\n\t\tconstructor(private _value: string) { }\n\n\t\t/**\n\t\t * The value of this font name tag.\n\t\t *\n\t\t * @type {?string}\n\t\t */\n\t\tget value(): string {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A font size tag {\\fs}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fs###} -> size (number), {\\fs} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class FontSize {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this font size tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A horizontal font scaling tag {\\fscx}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fscx###} -> scale (number), {\\fscx} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class FontScaleX {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this horizontal font scaling tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A vertical font scaling tag {\\fscy}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fscy###} -> scale (number), {\\fscy} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class FontScaleY {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this vertical font scaling tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A letter-spacing tag {\\fsp}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fsp###} -> spacing (number), {\\fsp} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class LetterSpacing {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this letter-spacing tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An X-axis rotation tag {\\frx}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\frx###} -> angle (number), {\\frx} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class RotateX {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this X-axis rotation tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A Y-axis rotation tag {\\fry}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fry###} -> angle (number), {\\fry} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class RotateY {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this Y-axis rotation tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A Z-axis rotation tag {\\fr} or {\\frz}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\frz###} -> angle (number), {\\frz} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class RotateZ {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this Z-axis rotation tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An X-axis shearing tag {\\fax}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fax###} -> angle (number), {\\fax} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class SkewX {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this X-axis shearing tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value() {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A Y-axis shearing tag {\\fay}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\fay###} -> angle (number), {\\fay} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class SkewY {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this Y-axis shearing tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A primary color tag {\\c} or {\\1c}\n\t *\n\t * @constructor\n\t * @param {libjass.parts.Color} value {\\1c###} -> color (Color), {\\1c} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class PrimaryColor {\n\t\tconstructor(private _value: Color) { }\n\n\t\t/**\n\t\t * The value of this primary color tag.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tget value(): Color {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A secondary color tag {\\2c}\n\t *\n\t * @constructor\n\t * @param {libjass.parts.Color} value {\\2c###} -> color (Color), {\\2c} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class SecondaryColor {\n\t\tconstructor(private _value: Color) { }\n\n\t\t/**\n\t\t * The value of this secondary color tag.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tget value(): Color {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An outline color tag {\\3c}\n\t *\n\t * @constructor\n\t * @param {libjass.parts.Color} value {\\3c###} -> color (Color), {\\3c} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class OutlineColor {\n\t\tconstructor(private _value: Color) { }\n\n\t\t/**\n\t\t * The value of this outline color tag.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tget value(): Color {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A shadow color tag {\\4c}\n\t *\n\t * @constructor\n\t * @param {libjass.parts.Color} value {\\4c###} -> color (Color), {\\4c} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ShadowColor {\n\t\tconstructor(private _value: Color) { }\n\n\t\t/**\n\t\t * The value of this shadow color tag.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tget value(): Color {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An alpha tag {\\alpha}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\alpha###} -> alpha (number), {\\alpha} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Alpha {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this alpha tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A primary alpha tag {\\1a}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\1a###} -> alpha (number), {\\1a} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class PrimaryAlpha {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this primary alpha tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A secondary alpha tag {\\2a}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\2a###} -> alpha (number), {\\2a} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class SecondaryAlpha {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this secondary alpha tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An outline alpha tag {\\3a}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\3a###} -> alpha (number), {\\3a} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class OutlineAlpha {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this outline alpha tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A shadow alpha tag {\\4a}\n\t *\n\t * @constructor\n\t * @param {?number} value {\\4a###} -> alpha (number), {\\4a} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ShadowAlpha {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this shadow alpha tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * An alignment tag {\\an} or {\\a}\n\t *\n\t * @constructor\n\t * @param {number} value {\\an###} -> alignment (number)\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Alignment {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this alignment tag.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A color karaoke tag {\\k}\n\t *\n\t * @constructor\n\t * @param {number} duration {\\k###} -> duration (number)\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ColorKaraoke {\n\t\tconstructor(private _duration: number) { }\n\n\t\t/**\n\t\t * The duration of this color karaoke tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget duration(): number {\n\t\t\treturn this._duration;\n\t\t}\n\t}\n\n\t/**\n\t * A sweeping color karaoke tag {\\K} or {\\kf}\n\t *\n\t * @constructor\n\t * @param {number} duration {\\kf###} -> duration (number)\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class SweepingColorKaraoke {\n\t\tconstructor(private _duration: number) { }\n\n\t\t/**\n\t\t * The duration of this sweeping color karaoke tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget duration(): number {\n\t\t\treturn this._duration;\n\t\t}\n\t}\n\n\t/**\n\t * An outline karaoke tag {\\ko}\n\t *\n\t * @constructor\n\t * @param {number} duration {\\ko###} -> duration (number)\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class OutlineKaraoke {\n\t\tconstructor(private _duration: number) { }\n\n\t\t/**\n\t\t * The duration of this outline karaoke tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget duration(): number {\n\t\t\treturn this._duration;\n\t\t}\n\t}\n\n\t/**\n\t * A wrapping style tag {\\q}\n\t *\n\t * @constructor\n\t * @param {number} value {\\q###} -> style (number)\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class WrappingStyle {\n\t\tconstructor(private _value: libjass.WrappingStyle) { }\n\n\t\t/**\n\t\t * The value of this wrapping style tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget value(): libjass.WrappingStyle {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A style reset tag {\\r}\n\t *\n\t * @constructor\n\t * @param {?string} value {\\r###} -> style name (string), {\\r} -> null\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Reset {\n\t\tconstructor(private _value: string) { }\n\n\t\t/**\n\t\t * The value of this style reset tag.\n\t\t *\n\t\t * @type {?string}\n\t\t */\n\t\tget value(): string {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A position tag {\\pos}\n\t *\n\t * @constructor\n\t * @param {number} x\n\t * @param {number} y\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Position {\n\t\tconstructor(private _x: number, private _y: number) { }\n\n\t\t/**\n\t\t * The x value of this position tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x(): number {\n\t\t\treturn this._x;\n\t\t}\n\n\t\t/**\n\t\t * The y value of this position tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y(): number {\n\t\t\treturn this._y;\n\t\t}\n\t}\n\n\t/**\n\t * A movement tag {\\move}\n\t *\n\t * @constructor\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {number} t1\n\t * @param {number} t2\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Move {\n\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _t1: number, private _t2: number) { }\n\n\t\t/**\n\t\t * The starting x value of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x1(): number {\n\t\t\treturn this._x1;\n\t\t}\n\n\t\t/**\n\t\t * The starting y value of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y1(): number {\n\t\t\treturn this._y1;\n\t\t}\n\n\t\t/**\n\t\t * The ending x value of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x2(): number {\n\t\t\treturn this._x2;\n\t\t}\n\n\t\t/**\n\t\t * The ending y value of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y2(): number {\n\t\t\treturn this._y2;\n\t\t}\n\n\t\t/**\n\t\t * The start time of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t1(): number {\n\t\t\treturn this._t1;\n\t\t}\n\n\t\t/**\n\t\t * The end time value of this move tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t2(): number {\n\t\t\treturn this._t2;\n\t\t}\n\t}\n\n\t/**\n\t * A rotation origin tag {\\org}\n\t *\n\t * @constructor\n\t * @param {number} x\n\t * @param {number} y\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class RotationOrigin {\n\t\tconstructor(private _x: number, private _y: number) { }\n\n\t\t/**\n\t\t * The x value of this rotation origin tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x(): number {\n\t\t\treturn this._x;\n\t\t}\n\n\t\t/**\n\t\t * The y value of this rotation origin tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y(): number {\n\t\t\treturn this._y;\n\t\t}\n\t}\n\n\t/**\n\t * A simple fade tag {\\fad}\n\t *\n\t * @constructor\n\t * @param {number} start\n\t * @param {number} end\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Fade {\n\t\tconstructor(private _start: number, private _end: number) { }\n\n\t\t/**\n\t\t * The start time of this fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget start(): number {\n\t\t\treturn this._start;\n\t\t}\n\n\t\t/**\n\t\t * The end time of this fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget end(): number {\n\t\t\treturn this._end;\n\t\t}\n\t}\n\n\t/**\n\t * A complex fade tag {\\fade}\n\t *\n\t * @constructor\n\t * @param {number} a1\n\t * @param {number} a2\n\t * @param {number} a3\n\t * @param {number} t1\n\t * @param {number} t2\n\t * @param {number} t3\n\t * @param {number} t4\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class ComplexFade {\n\t\tconstructor(\n\t\t\tprivate _a1: number, private _a2: number, private _a3: number,\n\t\t\tprivate _t1: number, private _t2: number, private _t3: number, private _t4: number\n\t\t) { }\n\n\t\t/**\n\t\t * The alpha value of this complex fade tag at time t2.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget a1(): number {\n\t\t\treturn this._a1;\n\t\t}\n\n\t\t/**\n\t\t * The alpha value of this complex fade tag at time t3.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget a2(): number {\n\t\t\treturn this._a2;\n\t\t}\n\n\t\t/**\n\t\t * The alpha value of this complex fade tag at time t4.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget a3(): number {\n\t\t\treturn this._a3;\n\t\t}\n\n\t\t/**\n\t\t * The starting time of this complex fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t1(): number {\n\t\t\treturn this._t1;\n\t\t}\n\n\t\t/**\n\t\t * The first intermediate time of this complex fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t2(): number {\n\t\t\treturn this._t2;\n\t\t}\n\n\t\t/**\n\t\t * The second intermediate time of this complex fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t3(): number {\n\t\t\treturn this._t3;\n\t\t}\n\n\t\t/**\n\t\t * The ending time of this complex fade tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget t4(): number {\n\t\t\treturn this._t4;\n\t\t}\n\t}\n\n\t/**\n\t * A transform tag {\\t}\n\t *\n\t * @constructor\n\t * @param {number} start\n\t * @param {number} end\n\t * @param {number} accel\n\t * @param {!Array.<!libjass.parts.Tag>} tags\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class Transform {\n\t\tconstructor(private _start: number, private _end: number, private _accel: number, private _tags: Part[]) { }\n\n\t\t/**\n\t\t * The starting time of this transform tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget start(): number {\n\t\t\treturn this._start;\n\t\t}\n\n\t\t/**\n\t\t * The ending time of this transform tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget end(): number {\n\t\t\treturn this._end;\n\t\t}\n\n\t\t/**\n\t\t * The acceleration of this transform tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget accel(): number {\n\t\t\treturn this._accel;\n\t\t}\n\n\t\t/**\n\t\t * The tags animated by this transform tag.\n\t\t *\n\t\t * @type {!Array.<!libjass.parts.Tag>}\n\t\t */\n\t\tget tags(): Part[] {\n\t\t\treturn this._tags;\n\t\t}\n\t}\n\n\t/**\n\t * A rectangular clip tag {\\clip} or {\\iclip}\n\t *\n\t * @constructor\n\t * @param {number} x1\n\t * @param {number} y1\n\t * @param {number} x2\n\t * @param {number} y2\n\t * @param {boolean} inside\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class RectangularClip {\n\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _inside: boolean) { }\n\n\t\t/**\n\t\t * The X coordinate of the starting position of this rectangular clip tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x1(): number {\n\t\t\treturn this._x1;\n\t\t}\n\n\t\t/**\n\t\t * The Y coordinate of the starting position of this rectangular clip tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y1(): number {\n\t\t\treturn this._y1;\n\t\t}\n\n\t\t/**\n\t\t * The X coordinate of the ending position of this rectangular clip tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget x2(): number {\n\t\t\treturn this._x2;\n\t\t}\n\n\t\t/**\n\t\t * The Y coordinate of the ending position of this rectangular clip tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget y2(): number {\n\t\t\treturn this._y2;\n\t\t}\n\n\t\t/**\n\t\t * Whether this rectangular clip tag clips the region it encloses or the region it excludes.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget inside(): boolean {\n\t\t\treturn this._inside;\n\t\t}\n\t}\n\n\t/**\n\t * A vector clip tag {\\clip} or {\\iclip}\n\t *\n\t * @constructor\n\t * @param {number} scale\n\t * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n\t * @param {boolean} inside\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class VectorClip {\n\t\tconstructor(private _scale: number, private _instructions: drawing.Instruction[], private _inside: boolean) { }\n\n\t\t/**\n\t\t * The scale of this vector clip tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget scale(): number {\n\t\t\treturn this._scale;\n\t\t}\n\n\t\t/**\n\t\t * The clip commands of this vector clip tag.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget instructions(): drawing.Instruction[] {\n\t\t\treturn this._instructions;\n\t\t}\n\n\t\t/**\n\t\t * Whether this vector clip tag clips the region it encloses or the region it excludes.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget inside(): boolean {\n\t\t\treturn this._inside;\n\t\t}\n\t}\n\n\t/**\n\t * A drawing mode tag {\\p}\n\t *\n\t * @constructor\n\t * @param {number} scale\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class DrawingMode {\n\t\tconstructor(private _scale: number) { }\n\n\t\t/**\n\t\t * The scale of this drawing mode tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget scale(): number {\n\t\t\treturn this._scale;\n\t\t}\n\t}\n\n\t/**\n\t * A drawing mode baseline offset tag {\\pbo}\n\t *\n\t * @constructor\n\t * @param {number} value\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class DrawingBaselineOffset {\n\t\tconstructor(private _value: number) { }\n\n\t\t/**\n\t\t * The value of this drawing mode baseline offset tag.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget value(): number {\n\t\t\treturn this._value;\n\t\t}\n\t}\n\n\t/**\n\t * A pseudo-part representing text interpreted as drawing instructions\n\t *\n\t * @constructor\n\t * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n\t *\n\t * @memberof libjass.parts\n\t */\n\texport class DrawingInstructions {\n\t\tconstructor(private _instructions: drawing.Instruction[]) { }\n\n\t\t/**\n\t\t * The instructions contained in this drawing instructions part.\n\t\t *\n\t\t * @type {!Array.<!libjass.parts.drawing.Instruction>}\n\t\t */\n\t\tget instructions(): drawing.Instruction[] {\n\t\t\treturn this._instructions;\n\t\t}\n\t}\n\n\texport module drawing {\n\t\t/**\n\t\t * The base interface of the drawing instructions.\n\t\t */\n\t\texport interface Instruction { }\n\n\t\t/**\n\t\t * An instruction to move to a particular position.\n\t\t *\n\t\t * @constructor\n\t\t * @param {number} x\n\t\t * @param {number} y\n\t\t *\n\t\t * @memberof libjass.parts.drawing\n\t\t */\n\t\texport class MoveInstruction implements Instruction {\n\t\t\tconstructor(private _x: number, private _y: number) { }\n\n\t\t\t/**\n\t\t\t * The X position of this move instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget x(): number {\n\t\t\t\treturn this._x;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The Y position of this move instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget y(): number {\n\t\t\t\treturn this._y;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * An instruction to draw a line to a particular position.\n\t\t *\n\t\t * @constructor\n\t\t * @param {number} x\n\t\t * @param {number} y\n\t\t *\n\t\t * @memberof libjass.parts.drawing\n\t\t */\n\t\texport class LineInstruction implements Instruction {\n\t\t\tconstructor(private _x: number, private _y: number) { }\n\n\t\t\t/**\n\t\t\t * The X position of this line instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget x(): number {\n\t\t\t\treturn this._x;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The Y position of this line instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget y(): number {\n\t\t\t\treturn this._y;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * An instruction to draw a cubic bezier curve to a particular position, with two given control points.\n\t\t *\n\t\t * @constructor\n\t\t * @param {number} x1\n\t\t * @param {number} y1\n\t\t * @param {number} x2\n\t\t * @param {number} y2\n\t\t * @param {number} x3\n\t\t * @param {number} y3\n\t\t *\n\t\t * @memberof libjass.parts.drawing\n\t\t */\n\t\texport class CubicBezierCurveInstruction implements Instruction {\n\t\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _x3: number, private _y3: number) { }\n\n\t\t\t/**\n\t\t\t * The X position of the first control point of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget x1(): number {\n\t\t\t\treturn this._x1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The Y position of the first control point of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget y1(): number {\n\t\t\t\treturn this._y1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The X position of the second control point of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget x2(): number {\n\t\t\t\treturn this._x2;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The Y position of the second control point of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget y2(): number {\n\t\t\t\treturn this._y2;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The ending X position of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget x3(): number {\n\t\t\t\treturn this._x3;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The ending Y position of this cubic bezier curve instruction.\n\t\t\t *\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tget y3(): number {\n\t\t\t\treturn this._y3;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar addToString = function (ctor: Function, ctorName: string) {\n\t\tif (!ctor.prototype.hasOwnProperty(\"toString\")) {\n\t\t\tvar propertyNames = Object.getOwnPropertyNames(ctor.prototype).filter(property => property !== \"constructor\");\n\n\t\t\tctor.prototype.toString = function () {\n\t\t\t\treturn (\n\t\t\t\t\tctorName + \" { \" +\n\t\t\t\t\tpropertyNames.map(name => name + \": \" + (<any>this)[name]).join(\", \") +\n\t\t\t\t\t((propertyNames.length > 0) ? \" \" : \"\") +\n\t\t\t\t\t\"}\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tObject.keys(libjass.parts).forEach(key => {\n\t\tvar value = (<any>libjass.parts)[key];\n\t\tif (value instanceof Function) {\n\t\t\taddToString(value, key);\n\t\t}\n\t});\n\n\tObject.keys(libjass.parts.drawing).forEach(key => {\n\t\tvar value = (<any>libjass.parts.drawing)[key];\n\t\tif (value instanceof Function) {\n\t\t\taddToString(value, \"Drawing\" + key);\n\t\t}\n\t});\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path=\"libjass.ts\" />\n\nmodule libjass.parser {\n\t/**\n\t * Parses a given string with the specified rule.\n\t *\n\t * @param {string} input\n\t * @param {string} rule\n\t * @return {*}\n\t *\n\t * @memberof libjass.parser\n\t */\n\texport function parse(input: string, rule: string): any {\n\t\tvar run = new ParserRun(input, rule);\n\n\t\tif (run.result === null || run.result.end !== input.length) {\n\t\t\tif (libjass.debugMode) {\n\t\t\t\tconsole.error(\"Parse failed. %s %s %o\", rule, input, run.result);\n\t\t\t}\n\n\t\t\tthrow new Error(\"Parse failed.\");\n\t\t}\n\n\t\treturn run.result.value;\n\t}\n\n\t/**\n\t * This class represents a single run of the parser.\n\t *\n\t * @constructor\n\t *\n\t * @param {string} input\n\t * @param {string} rule\n\t *\n\t * @private\n\t * @memberof libjass.parser\n\t */\n\tclass ParserRun {\n\t\tprivate _parseTree: ParseNode = new ParseNode(null);\n\t\tprivate _result: ParseNode;\n\n\t\tconstructor(private _input: string, rule: string) {\n\t\t\tthis._result = rules.get(rule).call(this, this._parseTree);\n\t\t}\n\n\t\t/**\n\t\t * @type {ParseNode}\n\t\t */\n\t\tget result(): ParseNode {\n\t\t\treturn this._result;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_script(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tcurrent.value = Object.create(null);\n\n\t\t\twhile (this._haveMore()) {\n\t\t\t\tvar scriptSectionNode = this.parse_scriptSection(current);\n\n\t\t\t\tif (scriptSectionNode !== null) {\n\t\t\t\t\tcurrent.value[scriptSectionNode.value.name] = scriptSectionNode.value.contents;\n\t\t\t\t}\n\t\t\t\telse if (this.read(current, \"\\n\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_scriptSection(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tcurrent.value = Object.create(null);\n\t\t\tcurrent.value.contents = null;\n\n\t\t\tvar sectionHeaderNode = this.parse_scriptSectionHeader(current);\n\t\t\tif (sectionHeaderNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value.name = sectionHeaderNode.value;\n\n\t\t\tvar formatSpecifier: string[] = null;\n\n\t\t\twhile (this._haveMore() && this._peek() !== \"[\") {\n\t\t\t\tif (this.parse_scriptComment(current) !== null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar propertyNode = this.parse_scriptProperty(current);\n\n\t\t\t\tif (propertyNode !== null) {\n\t\t\t\t\tvar property = propertyNode.value;\n\n\t\t\t\t\tif (property.key === \"Format\") {\n\t\t\t\t\t\tformatSpecifier = property.value.split(\",\").map((formatPart: string) => formatPart.trim());\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (formatSpecifier !== null) {\n\t\t\t\t\t\tif (current.value.contents === null) {\n\t\t\t\t\t\t\tcurrent.value.contents = <any[]>[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar template = Object.create(null);\n\t\t\t\t\t\tvar value = property.value.split(\",\");\n\n\t\t\t\t\t\tif (value.length > formatSpecifier.length) {\n\t\t\t\t\t\t\tvalue[formatSpecifier.length - 1] = value.slice(formatSpecifier.length - 1).join(\",\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tformatSpecifier.forEach((formatKey, index) => {\n\t\t\t\t\t\t\ttemplate[formatKey] = value[index];\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcurrent.value.contents.push({ type: property.key, template: template });\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (current.value.contents === null) {\n\t\t\t\t\t\t\tcurrent.value.contents = Object.create(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrent.value.contents[property.key] = property.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Empty line\n\t\t\t\telse if (this.read(current, \"\\n\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_scriptSectionHeader(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"[\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar nameNode = new ParseNode(current, \"\");\n\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"]\" && next !== \"\\n\"; next = this._peek()) {\n\t\t\t\tnameNode.value += next;\n\t\t\t}\n\n\t\t\tif (nameNode.value.length === 0) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = nameNode.value;\n\n\t\t\tif (this.read(current, \"]\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_scriptProperty(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tcurrent.value = Object.create(null);\n\n\t\t\tvar keyNode = new ParseNode(current, \"\");\n\n\t\t\tvar next: string;\n\n\t\t\tfor (next = this._peek(); this._haveMore() && next !== \":\" && next !== \"\\n\"; next = this._peek()) {\n\t\t\t\tkeyNode.value += next;\n\t\t\t}\n\n\t\t\tif (keyNode.value.length === 0) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \":\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar spacesNode = new ParseNode(current, \"\");\n\n\t\t\tfor (next = this._peek(); next === \" \"; next = this._peek()) {\n\t\t\t\tspacesNode.value += next;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, \"\");\n\n\t\t\tfor (next = this._peek(); this._haveMore() && next !== \"\\n\"; next = this._peek()) {\n\t\t\t\tvalueNode.value += next;\n\t\t\t}\n\n\t\t\tcurrent.value.key = keyNode.value;\n\t\t\tcurrent.value.value = valueNode.value;\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_scriptComment(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \";\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, \"\");\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"\\n\"; next = this._peek()) {\n\t\t\t\tvalueNode.value += next;\n\t\t\t}\n\n\t\t\tcurrent.value = valueNode.value;\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_dialogueParts(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tcurrent.value = [];\n\n\t\t\twhile (this._haveMore()) {\n\t\t\t\tvar enclosedTagsNode = this.parse_enclosedTags(current);\n\n\t\t\t\tif (enclosedTagsNode !== null) {\n\t\t\t\t\tcurrent.value.push.apply(current.value, enclosedTagsNode.value);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tvar newLineNode = this.parse_newline(current);\n\n\t\t\t\t\tif (newLineNode !== null) {\n\t\t\t\t\t\tcurrent.value.push(newLineNode.value);\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar textNode = this.parse_newline(current) || this.parse_hardspace(current) || this.parse_text(current);\n\n\t\t\t\t\t\tif (textNode !== null) {\n\t\t\t\t\t\t\tif (current.value[current.value.length - 1] instanceof parts.Text) {\n\t\t\t\t\t\t\t\t// Merge consecutive text parts into one part\n\t\t\t\t\t\t\t\tvar previousTextPart = <parts.Text>current.value[current.value.length - 1];\n\t\t\t\t\t\t\t\tcurrent.value[current.value.length - 1] = new parts.Text(previousTextPart.value + (<parts.Text>textNode.value).value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tcurrent.value.push(textNode.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar inDrawingMode = false;\n\n\t\t\tcurrent.value.forEach((part: parts.Part, i: number) => {\n\t\t\t\tif (part instanceof parts.DrawingMode) {\n\t\t\t\t\tinDrawingMode = (<parts.DrawingMode>part).scale !== 0;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Text && inDrawingMode) {\n\t\t\t\t\tcurrent.value[i] = new parts.DrawingInstructions(<parts.drawing.Instruction[]>parser.parse((<parts.Text>part).value, \"drawingInstructions\"));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_enclosedTags(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tcurrent.value = [];\n\n\t\t\tif (this.read(current, \"{\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"}\"; next = this._peek()) {\n\t\t\t\tvar childNode: ParseNode = null;\n\n\t\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\t\tchildNode =\n\t\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\t\tthis.parse_tag_fade(current) ||\n\t\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\t\tthis.parse_tag_move(current) ||\n\t\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_fad(current) ||\n\t\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\t\t\t\t\t\tthis.parse_tag_org(current) ||\n\t\t\t\t\t\tthis.parse_tag_pbo(current) ||\n\t\t\t\t\t\tthis.parse_tag_pos(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_an(current) ||\n\t\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\t\tthis.parse_tag_fn(current) ||\n\t\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\t\tthis.parse_tag_kf(current) ||\n\t\t\t\t\t\tthis.parse_tag_ko(current) ||\n\t\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_a(current) ||\n\t\t\t\t\t\tthis.parse_tag_b(current) ||\n\t\t\t\t\t\tthis.parse_tag_c(current) ||\n\t\t\t\t\t\tthis.parse_tag_i(current) ||\n\t\t\t\t\t\tthis.parse_tag_k(current) ||\n\t\t\t\t\t\tthis.parse_tag_K(current) ||\n\t\t\t\t\t\tthis.parse_tag_p(current) ||\n\t\t\t\t\t\tthis.parse_tag_q(current) ||\n\t\t\t\t\t\tthis.parse_tag_r(current) ||\n\t\t\t\t\t\tthis.parse_tag_s(current) ||\n\t\t\t\t\t\tthis.parse_tag_t(current) ||\n\t\t\t\t\t\tthis.parse_tag_u(current);\n\n\t\t\t\t\tif (childNode === null) {\n\t\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t\t}\n\n\t\t\t\tif (childNode !== null) {\n\t\t\t\t\tif (childNode.value instanceof parts.Comment && current.value[current.value.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\t\tcurrent.value[current.value.length - 1] =\n\t\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t\t(<parts.Comment>current.value[current.value.length - 1]).value +\n\t\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.value.push(childNode.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.read(current, \"}\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_newline(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"\\\\N\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.NewLine();\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_hardspace(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"\\\\h\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Text(\"\\u00A0\");\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_text(parent: ParseNode): ParseNode {\n\t\t\tvar value = this._peek();\n\n\t\t\tvar current = new ParseNode(parent);\n\t\t\tvar valueNode = new ParseNode(current, value);\n\n\t\t\tcurrent.value = new parts.Text(valueNode.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_comment(parent: ParseNode): ParseNode {\n\t\t\tvar value = this._peek();\n\n\t\t\tvar current = new ParseNode(parent);\n\t\t\tvar valueNode = new ParseNode(current, value);\n\n\t\t\tcurrent.value = new parts.Comment(valueNode.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_a(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"a\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar next = this._peek();\n\n\t\t\tswitch (next) {\n\t\t\t\tcase \"1\":\n\t\t\t\t\tvar next2 = this._peek(2);\n\n\t\t\t\t\tswitch (next2) {\n\t\t\t\t\t\tcase \"10\":\n\t\t\t\t\t\tcase \"11\":\n\t\t\t\t\t\t\tnext = next2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\tcase \"3\":\n\t\t\t\tcase \"5\":\n\t\t\t\tcase \"6\":\n\t\t\t\tcase \"7\":\n\t\t\t\tcase \"9\":\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, next);\n\n\t\t\tvar value: number = null;\n\t\t\tswitch (valueNode.value) {\n\t\t\t\tcase \"1\":\n\t\t\t\t\tvalue = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\t\tvalue = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"3\":\n\t\t\t\t\tvalue = 3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"5\":\n\t\t\t\t\tvalue = 7;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"6\":\n\t\t\t\t\tvalue = 8;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"7\":\n\t\t\t\t\tvalue = 9;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"9\":\n\t\t\t\t\tvalue = 4;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"10\":\n\t\t\t\t\tvalue = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"11\":\n\t\t\t\t\tvalue = 6;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Alignment(value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_alpha(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_an(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"an\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar next = this._peek();\n\n\t\t\tif (next < \"1\" || next > \"9\") {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, next);\n\n\t\t\tcurrent.value = new parts.Alignment(parseInt(valueNode.value));\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_b(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"b\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode: ParseNode = null;\n\n\t\t\tvar next = this._peek();\n\n\t\t\tif (next >= \"1\" && next <= \"9\") {\n\t\t\t\tnext = this._peek(3);\n\t\t\t\tif (next.substr(1) === \"00\") {\n\t\t\t\t\tvalueNode = new ParseNode(current, next);\n\t\t\t\t\tvalueNode.value = parseInt(valueNode.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (valueNode === null) {\n\t\t\t\tvalueNode = this.parse_enableDisable(current);\n\t\t\t}\n\n\t\t\tif (valueNode !== null) {\n\t\t\t\tcurrent.value = new parts.Bold(valueNode.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent.value = new parts.Bold(null);\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_be(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_blur(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_bord(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_c(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_clip(parent: ParseNode): ParseNode {\n\t\t\treturn this._parse_tag_clip_or_iclip(\"clip\", parent);\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fad(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"fad\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar startNode = this.parse_decimal(current);\n\t\t\tif (startNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar endNode = this.parse_decimal(current);\n\t\t\tif (endNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Fade(startNode.value / 1000, endNode.value / 1000);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fade(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"fade\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar a1Node = this.parse_decimal(current);\n\t\t\tif (a1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar a2Node = this.parse_decimal(current);\n\t\t\tif (a2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar a3Node = this.parse_decimal(current);\n\t\t\tif (a3Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t1Node = this.parse_decimal(current);\n\t\t\tif (t1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t2Node = this.parse_decimal(current);\n\t\t\tif (t2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t3Node = this.parse_decimal(current);\n\t\t\tif (t3Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t4Node = this.parse_decimal(current);\n\t\t\tif (t4Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value =\n\t\t\t\tnew parts.ComplexFade(\n\t\t\t\t\t1 - a1Node.value / 255, 1 - a2Node.value / 255, 1 - a3Node.value / 255,\n\t\t\t\t\tt1Node.value / 1000, t2Node.value / 1000, t3Node.value / 1000, t4Node.value / 1000\n\t\t\t\t);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fax(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fay(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fn(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"fn\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, \"\");\n\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\tvalueNode.value += next;\n\t\t\t}\n\n\t\t\tif (valueNode.value.length > 0) {\n\t\t\t\tcurrent.value = new parts.FontName(valueNode.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent.value = new parts.FontName(null);\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fr(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_frx(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fry(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_frz(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fs(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fscx(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"fscx\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = this.parse_decimal(current);\n\n\t\t\tif (valueNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.FontScaleX(valueNode.value / 100);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fscy(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"fscy\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = this.parse_decimal(current);\n\n\t\t\tif (valueNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.FontScaleY(valueNode.value / 100);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_fsp(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_i(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_iclip(parent: ParseNode): ParseNode {\n\t\t\treturn this._parse_tag_clip_or_iclip(\"iclip\", parent);\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_k(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_K(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_kf(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_ko(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_move(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"move\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar x1Node = this.parse_decimal(current);\n\t\t\tif (x1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar y1Node = this.parse_decimal(current);\n\t\t\tif (y1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar x2Node = this.parse_decimal(current);\n\t\t\tif (x2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar y2Node = this.parse_decimal(current);\n\t\t\tif (y2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t1Node: ParseNode = null;\n\t\t\tvar t2Node: ParseNode = null;\n\n\t\t\tif (this.read(current, \",\") !== null) {\n\t\t\t\tt1Node = this.parse_decimal(current);\n\t\t\t\tif (t1Node === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tt2Node = this.parse_decimal(current);\n\t\t\t\tif (t2Node === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Move(\n\t\t\t\tx1Node.value, y1Node.value, x2Node.value, y2Node.value,\n\t\t\t\t(t1Node !== null) ? (t1Node.value / 1000) : null, (t2Node !== null) ? (t2Node.value / 1000) : null\n\t\t\t);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_org(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"org\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar xNode = this.parse_decimal(current);\n\t\t\tif (xNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar yNode = this.parse_decimal(current);\n\t\t\tif (yNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.RotationOrigin(xNode.value, yNode.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_p(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_pbo(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_pos(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"pos\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar xNode = this.parse_decimal(current);\n\t\t\tif (xNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar yNode = this.parse_decimal(current);\n\t\t\tif (yNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Position(xNode.value, yNode.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_q(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"q\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar next = this._peek();\n\n\t\t\tif (next < \"0\" || next > \"3\") {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, next);\n\n\t\t\tcurrent.value = new parts.WrappingStyle(parseInt(valueNode.value));\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_r(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"r\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = new ParseNode(current, \"\");\n\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\tvalueNode.value += next;\n\t\t\t}\n\n\t\t\tif (valueNode.value.length > 0) {\n\t\t\t\tcurrent.value = new parts.Reset(valueNode.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent.value = new parts.Reset(null);\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_s(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_shad(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_t(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"t\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar startNode: ParseNode = null;\n\t\t\tvar endNode: ParseNode = null;\n\t\t\tvar accelNode: ParseNode = null;\n\n\t\t\tvar firstNode = this.parse_decimal(current);\n\t\t\tif (firstNode !== null) {\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tvar secondNode = this.parse_decimal(current);\n\t\t\t\tif (secondNode !== null) {\n\t\t\t\t\tstartNode = firstNode;\n\t\t\t\t\tendNode = secondNode;\n\n\t\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar thirdNode = this.parse_decimal(current);\n\t\t\t\t\tif (thirdNode !== null) {\n\t\t\t\t\t\taccelNode = thirdNode;\n\n\t\t\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\taccelNode = firstNode;\n\n\t\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar transformTags: parts.Part[] = [];\n\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\tvar childNode: ParseNode = null;\n\n\t\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\t\tchildNode =\n\t\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\t\tthis.parse_tag_c(current);\n\n\t\t\t\t\tif (childNode === null) {\n\t\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t\t}\n\n\t\t\t\tif (childNode !== null) {\n\t\t\t\t\tif (childNode.value instanceof parts.Comment && transformTags[transformTags.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\t\ttransformTags[transformTags.length - 1] =\n\t\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t\t(<parts.Comment>transformTags[transformTags.length - 1]).value +\n\t\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttransformTags.push(childNode.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.read(current, \")\");\n\n\t\t\tcurrent.value =\n\t\t\t\tnew parts.Transform(\n\t\t\t\t\t(startNode !== null) ? (startNode.value / 1000) : null,\n\t\t\t\t\t(endNode !== null) ? (endNode.value / 1000) : null,\n\t\t\t\t\t(accelNode !== null) ? (accelNode.value / 1000) : null,\n\t\t\t\t\ttransformTags\n\t\t\t\t);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_u(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_xbord(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_xshad(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_ybord(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_yshad(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_1a(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_1c(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_2a(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_2c(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_3a(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_3c(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_4a(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_tag_4c(parent: ParseNode): ParseNode {\n\t\t\tthrow new Error(\"Method not implemented.\");\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_drawingInstructions(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tvar lastType: string = null;\n\n\t\t\tcurrent.value = [];\n\n\t\t\twhile (this._haveMore()) {\n\t\t\t\twhile (this.read(current, \" \") !== null) { }\n\t\t\t\tif (!this._haveMore()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar currentType: string = null;\n\n\t\t\t\tvar typePart = this.parse_text(current);\n\t\t\t\tif (typePart === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tcurrentType = typePart.value.value;\n\t\t\t\tswitch (currentType) {\n\t\t\t\t\tcase \"m\":\n\t\t\t\t\tcase \"l\":\n\t\t\t\t\tcase \"b\":\n\t\t\t\t\t\tlastType = currentType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (lastType === null) {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentType = lastType;\n\t\t\t\t\t\tcurrent.pop();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch (currentType) {\n\t\t\t\t\tcase \"m\":\n\t\t\t\t\t\tvar movePart = this.parse_drawingInstructionMove(current);\n\t\t\t\t\t\tif (movePart === null) {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrent.value.push(movePart.value);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"l\":\n\t\t\t\t\t\tvar linePart = this.parse_drawingInstructionLine(current);\n\t\t\t\t\t\tif (linePart === null) {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrent.value.push(linePart.value);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"b\":\n\t\t\t\t\t\tvar cubicBezierCurvePart = this.parse_drawingInstructionCubicBezierCurve(current);\n\t\t\t\t\t\tif (cubicBezierCurvePart === null) {\n\t\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrent.value.push(cubicBezierCurvePart.value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_drawingInstructionMove(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar xPart = this.parse_decimal(current);\n\t\t\tif (xPart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar yPart = this.parse_decimal(current);\n\t\t\tif (yPart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.drawing.MoveInstruction(xPart.value, yPart.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_drawingInstructionLine(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar xPart = this.parse_decimal(current);\n\t\t\tif (xPart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar yPart = this.parse_decimal(current);\n\t\t\tif (yPart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.drawing.LineInstruction(xPart.value, yPart.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_drawingInstructionCubicBezierCurve(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar x1Part = this.parse_decimal(current);\n\t\t\tif (x1Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar y1Part = this.parse_decimal(current);\n\t\t\tif (y1Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar x2Part = this.parse_decimal(current);\n\t\t\tif (x2Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar y2Part = this.parse_decimal(current);\n\t\t\tif (y2Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar x3Part = this.parse_decimal(current);\n\t\t\tif (x3Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\t\tvar y3Part = this.parse_decimal(current);\n\t\t\tif (y3Part === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.drawing.CubicBezierCurveInstruction(x1Part.value, y1Part.value, x2Part.value, y2Part.value, x3Part.value, y3Part.value);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_decimal(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tvar negative = (this.read(current, \"-\") !== null);\n\n\t\t\tvar numericalPart = this.parse_unsignedDecimal(current);\n\n\t\t\tif (numericalPart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = numericalPart.value;\n\n\t\t\tif (negative) {\n\t\t\t\tcurrent.value = -current.value;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_unsignedDecimal(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tvar characteristicNode = new ParseNode(current, \"\");\n\n\t\t\tvar mantissaNode: ParseNode = null;\n\n\t\t\tvar next: string;\n\t\t\tfor (next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\t\tcharacteristicNode.value += next;\n\t\t\t}\n\n\t\t\tif (characteristicNode.value.length === 0) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \".\") !== null) {\n\t\t\t\tmantissaNode = new ParseNode(current, \"\");\n\n\t\t\t\tfor (next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\t\t\tmantissaNode.value += next;\n\t\t\t\t}\n\n\t\t\t\tif (mantissaNode.value.length === 0) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent.value = parseFloat(characteristicNode.value + ((mantissaNode !== null) ? (\".\" + mantissaNode.value) : \"\"));\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_enableDisable(parent: ParseNode): ParseNode {\n\t\t\tvar next = this._peek();\n\n\t\t\tif (next === \"0\" || next === \"1\") {\n\t\t\t\tvar result = new ParseNode(parent, next);\n\t\t\t\tresult.value = (result.value === \"1\");\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_hex(parent: ParseNode): ParseNode {\n\t\t\tvar next = this._peek();\n\n\t\t\tif ((next >= \"0\" && next <= \"9\") || (next >= \"a\" && next <= \"f\") || (next >= \"A\" && next <= \"F\")) {\n\t\t\t\treturn new ParseNode(parent, next);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_color(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"&\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.read(current, \"H\");\n\n\t\t\tvar digitNodes = new Array<ParseNode>(6);\n\n\t\t\tfor (var i = 0; i < digitNodes.length; i++) {\n\t\t\t\tvar digitNode = this.parse_hex(current);\n\t\t\t\tif (digitNode === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tdigitNodes[i] = digitNode;\n\t\t\t}\n\n\t\t\t// Optional extra 00 at the end\n\t\t\tif (this.read(current, \"0\") !== null) {\n\t\t\t\tif (this.read(current, \"0\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.read(current, \"&\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Color(\n\t\t\t\tparseInt(digitNodes[4].value + digitNodes[5].value, 16),\n\t\t\t\tparseInt(digitNodes[2].value + digitNodes[3].value, 16),\n\t\t\t\tparseInt(digitNodes[0].value + digitNodes[1].value, 16)\n\t\t\t);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_alpha(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"&\") !== null) {\n\t\t\t\tthis.read(current, \"H\");\n\t\t\t}\n\n\t\t\tvar firstDigitNode = this.parse_hex(current);\n\t\t\tif (firstDigitNode === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar secondDigitNode = this.parse_hex(current);\n\n\t\t\tthis.read(current, \"&\");\n\n\t\t\tcurrent.value = 1 - parseInt(firstDigitNode.value + ((secondDigitNode !== null) ? secondDigitNode : firstDigitNode).value, 16) / 255;\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t */\n\t\tparse_colorWithAlpha(parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, \"&H\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar digitNodes = new Array<ParseNode>(8);\n\n\t\t\tfor (var i = 0; i < digitNodes.length; i++) {\n\t\t\t\tvar digitNode = this.parse_hex(current);\n\t\t\t\tif (digitNode === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tdigitNodes[i] = digitNode;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.Color(\n\t\t\t\tparseInt(digitNodes[6].value + digitNodes[7].value, 16),\n\t\t\t\tparseInt(digitNodes[4].value + digitNodes[5].value, 16),\n\t\t\t\tparseInt(digitNodes[2].value + digitNodes[3].value, 16),\n\t\t\t\t1 - parseInt(digitNodes[0].value + digitNodes[1].value, 16) / 255\n\t\t\t);\n\n\t\t\treturn current;\n\t\t}\n\n\t\t/**\n\t\t * @param {!ParseNode} parent\n\t\t * @param {string} next\n\t\t * @return {ParseNode}\n\t\t */\n\t\tread(parent: ParseNode, next: string): ParseNode {\n\t\t\tif (this._peek(next.length) !== next) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new ParseNode(parent, next);\n\t\t}\n\n\t\t/**\n\t\t * @param {number=1} count\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _peek(count: number = 1): string {\n\t\t\treturn this._input.substr(this._parseTree.end, count);\n\t\t}\n\n\t\t/**\n\t\t * @return {boolean}\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _haveMore(): boolean {\n\t\t\treturn this._parseTree.end < this._input.length;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} tagName One of \"clip\" and \"iclip\"\n\t\t * @param {!ParseNode} parent\n\t\t * @return {ParseNode}\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _parse_tag_clip_or_iclip(tagName: string, parent: ParseNode): ParseNode {\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (this.read(current, tagName) === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \"(\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar x1Node: ParseNode = null;\n\t\t\tvar x2Node: ParseNode = null;\n\t\t\tvar y1Node: ParseNode = null;\n\t\t\tvar y2Node: ParseNode = null;\n\t\t\tvar scaleNode: ParseNode = null;\n\t\t\tvar commandsNode: ParseNode = null;\n\n\t\t\tvar firstNode = this.parse_decimal(current);\n\n\t\t\tif (firstNode !== null) {\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tvar secondNode = this.parse_decimal(current);\n\n\t\t\t\tif (secondNode !== null) {\n\t\t\t\t\tx1Node = firstNode;\n\t\t\t\t\ty1Node = secondNode;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscaleNode = firstNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (x1Node !== null && y1Node !== null) {\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tx2Node = this.parse_decimal(current);\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\ty2Node = this.parse_decimal(current);\n\n\t\t\t\tcurrent.value = new parts.RectangularClip(x1Node.value, y1Node.value, x2Node.value, y2Node.value, tagName === \"clip\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcommandsNode = new ParseNode(current, \"\");\n\n\t\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\t\tcommandsNode.value += next;\n\t\t\t\t}\n\n\t\t\t\tcurrent.value = new parts.VectorClip((scaleNode !== null) ? scaleNode.value : 1, <parts.drawing.Instruction[]>parser.parse(commandsNode.value, \"drawingInstructions\"), tagName === \"clip\");\n\t\t\t}\n\n\t\t\tif (this.read(current, \")\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\t};\n\n\tfunction makeTagParserFunction(\n\t\ttagName: string,\n\t\ttagConstructor: { new (value: any): parts.Part },\n\t\tvalueParser: (current: ParseNode) => ParseNode,\n\t\trequired: boolean\n\t) {\n\t\t(<any>ParserRun.prototype)[\"parse_tag_\" + tagName] = function (parent: ParseNode): ParseNode {\n\t\t\tvar self = <ParserRun>this;\n\t\t\tvar current = new ParseNode(parent);\n\n\t\t\tif (self.read(current, tagName) === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar valueNode = valueParser.call(self, current);\n\n\t\t\tif (valueNode !== null) {\n\t\t\t\tcurrent.value = new tagConstructor(valueNode.value);\n\t\t\t}\n\t\t\telse if (required) {\n\t\t\t\tcurrent.value = new tagConstructor(null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t};\n\t}\n\n\tmakeTagParserFunction(\"alpha\", parts.Alpha, ParserRun.prototype.parse_alpha, false);\n\tmakeTagParserFunction(\"be\", parts.Blur, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"blur\", parts.GaussianBlur, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"bord\", parts.Border, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\n\tmakeTagParserFunction(\"fax\", parts.SkewX, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"fay\", parts.SkewY, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"fr\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"frx\", parts.RotateX, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"fry\", parts.RotateY, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"frz\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"fs\", parts.FontSize, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"fsp\", parts.LetterSpacing, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"i\", parts.Italic, ParserRun.prototype.parse_enableDisable, false);\n\tmakeTagParserFunction(\"k\", parts.ColorKaraoke, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"K\", parts.SweepingColorKaraoke, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"kf\", parts.SweepingColorKaraoke, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"ko\", parts.OutlineKaraoke, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"p\", parts.DrawingMode, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"pbo\", parts.DrawingBaselineOffset, ParserRun.prototype.parse_decimal, true);\n\tmakeTagParserFunction(\"s\", parts.StrikeThrough, ParserRun.prototype.parse_enableDisable, false);\n\tmakeTagParserFunction(\"shad\", parts.Shadow, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"u\", parts.Underline, ParserRun.prototype.parse_enableDisable, false);\n\tmakeTagParserFunction(\"xbord\", parts.BorderX, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"xshad\", parts.ShadowX, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"ybord\", parts.BorderY, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"yshad\", parts.ShadowY, ParserRun.prototype.parse_decimal, false);\n\tmakeTagParserFunction(\"1a\", parts.PrimaryAlpha, ParserRun.prototype.parse_alpha, false);\n\tmakeTagParserFunction(\"1c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\n\tmakeTagParserFunction(\"2a\", parts.SecondaryAlpha, ParserRun.prototype.parse_alpha, false);\n\tmakeTagParserFunction(\"2c\", parts.SecondaryColor, ParserRun.prototype.parse_color, false);\n\tmakeTagParserFunction(\"3a\", parts.OutlineAlpha, ParserRun.prototype.parse_alpha, false);\n\tmakeTagParserFunction(\"3c\", parts.OutlineColor, ParserRun.prototype.parse_color, false);\n\tmakeTagParserFunction(\"4a\", parts.ShadowAlpha, ParserRun.prototype.parse_alpha, false);\n\tmakeTagParserFunction(\"4c\", parts.ShadowColor, ParserRun.prototype.parse_color, false);\n\n\tvar rules = new Map<string, (parent: ParseNode) => ParseNode>();\n\tObject.keys(ParserRun.prototype).forEach(key => {\n\t\tif (key.indexOf(\"parse_\") === 0 && typeof (<any>ParserRun.prototype)[key] === \"function\") {\n\t\t\trules.set(key.substr(\"parse_\".length), (<any>ParserRun.prototype)[key]);\n\t\t}\n\t});\n\n\t/**\n\t * This class represents a single parse node. It has a start and end position, and an optional value object.\n\t *\n\t * @constructor\n\t * @param {ParseNode} parent The parent of this parse node. The parent's end position will be updated to the end position of this node whenever the latter changes.\n\t * @param {?string=null} value A shortcut to assign a string to the value property.\n\t *\n\t * @private\n\t * @memberof libjass.parser\n\t */\n\tclass ParseNode {\n\t\tprivate _children: ParseNode[] = [];\n\n\t\tprivate _start: number;\n\t\tprivate _end: number;\n\t\tprivate _value: any;\n\n\t\tconstructor(private _parent: ParseNode, value: string = null) {\n\t\t\tif (_parent !== null) {\n\t\t\t\t_parent._children.push(this);\n\t\t\t}\n\n\t\t\tthis._start = ((_parent !== null) ? _parent.end : 0);\n\n\t\t\tif (value !== null) {\n\t\t\t\tthis.value = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setEnd(this._start);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * The start position of this parse node.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget start(): number {\n\t\t\treturn this._start;\n\t\t}\n\n\t\t/**\n\t\t * The end position of this parse node.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget end(): number {\n\t\t\treturn this._end;\n\t\t}\n\n\t\t/**\n\t\t * @type {ParseNode}\n\t\t */\n\t\tget parent(): ParseNode {\n\t\t\treturn this._parent;\n\t\t}\n\n\t\t/**\n\t\t * @type {!Array.<!ParseNode>}\n\t\t */\n\t\tget children(): ParseNode[] {\n\t\t\treturn this._children;\n\t\t}\n\n\t\t/**\n\t\t * An optional object associated with this parse node.\n\t\t *\n\t\t * @type {*}\n\t\t */\n\t\tget value(): any {\n\t\t\treturn this._value;\n\t\t}\n\n\t\t/**\n\t\t * An optional object associated with this parse node.\n\t\t *\n\t\t * If the value is a string, then the end property is updated to be the length of the string.\n\t\t *\n\t\t * @type {*}\n\t\t */\n\t\tset value(newValue: any) {\n\t\t\tthis._value = newValue;\n\n\t\t\tif (this._value.constructor === String && this._children.length === 0) {\n\t\t\t\tthis._setEnd(this._start + this._value.length);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Removes the last child of this node and updates the end position to be end position of the new last child.\n\t\t */\n\t\tpop(): void {\n\t\t\tthis._children.splice(this._children.length - 1, 1);\n\n\t\t\tif (this._children.length > 0) {\n\t\t\t\tthis._setEnd(this._children[this._children.length - 1].end);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setEnd(this.start);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the end property of this node and its parent recursively to the root node.\n\t\t *\n\t\t * @param {number} newEnd\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _setEnd(newEnd: number): void {\n\t\t\tthis._end = newEnd;\n\n\t\t\tif (this._parent !== null && this._parent.end !== this._end) {\n\t\t\t\tthis._parent._setEnd(this._end);\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path=\"libjass.ts\" />\n\ninterface CSSStyleDeclaration {\n\twebkitAnimation: string;\n\twebkitAnimationDelay: string;\n\twebkitFilter: string;\n\twebkitTransform: string;\n\twebkitTransformOrigin: string;\n}\n\ninterface Document {\n\tfullscreenElement: Element;\n\tmozFullScreenElement: Element;\n\twebkitFullscreenElement: Element;\n}\n\nmodule libjass.renderers {\n\t/**\n\t * A renderer implementation that doesn't output anything.\n\t *\n\t * @constructor\n\t *\n\t * @param {!HTMLVideoElement} video\n\t * @param {!libjass.ASS} ass\n\t * @param {!libjass.renderers.RendererSettings} settings\n\t *\n\t * @memberof libjass.renderers\n\t */\n\texport class NullRenderer {\n\t\tprivate static _lastRendererId = -1;\n\n\t\tprivate _id: number;\n\n\t\tprivate _settings: RendererSettings;\n\n\t\tprivate _state: RendererState;\n\t\tprivate _currentTime: number;\n\t\tprivate _enabled: boolean = true;\n\n\t\tprivate _nextAnimationFrameRequestId: number = null;\n\n\t\tconstructor(private _video: HTMLVideoElement, private _ass: ASS, settings: RendererSettings) {\n\t\t\tthis._id = ++NullRenderer._lastRendererId;\n\n\t\t\tthis._settings = RendererSettings.from(settings);\n\n\t\t\tthis._video.addEventListener(\"playing\", () => this._onVideoPlaying(), false);\n\t\t\tthis._video.addEventListener(\"pause\", () => this._onVideoPause(), false);\n\t\t\tthis._video.addEventListener(\"seeking\", () => this._onVideoSeeking(), false);\n\t\t}\n\n\t\t/**\n\t\t * The unique ID of this renderer. Auto-generated.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget id(): number {\n\t\t\treturn this._id;\n\t\t}\n\n\t\t/**\n\t\t * @type {!HTMLVideoElement}\n\t\t */\n\t\tget video(): HTMLVideoElement {\n\t\t\treturn this._video;\n\t\t}\n\n\t\t/**\n\t\t * @type {!libjass.ASS}\n\t\t */\n\t\tget ass(): ASS {\n\t\t\treturn this._ass;\n\t\t}\n\n\t\t/**\n\t\t * @type {!libjass.renderers.RendererSettings}\n\t\t */\n\t\tget settings(): RendererSettings {\n\t\t\treturn this._settings;\n\t\t}\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tget currentTime(): number {\n\t\t\treturn this._currentTime;\n\t\t}\n\n\t\tget enabled(): boolean {\n\t\t\treturn this._enabled;\n\t\t}\n\n\t\t/**\n\t\t * Enable the renderer.\n\t\t */\n\t\tenable(): void {\n\t\t\tif (this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._enabled = true;\n\n\t\t\tthis._onVideoPlaying();\n\t\t}\n\n\t\t/**\n\t\t * Disable the renderer.\n\t\t */\n\t\tdisable(): void {\n\t\t\tif (!this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._onVideoPause();\n\n\t\t\tthis._enabled = false;\n\t\t}\n\n\t\t/**\n\t\t * Toggle the renderer.\n\t\t */\n\t\ttoggle(): void {\n\t\t\tif (this._enabled) {\n\t\t\t\tthis.disable();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enable();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Pre-render a dialogue. This is a no-op.\n\t\t *\n\t\t * @param {!libjass.Dialogue} dialogue\n\t\t */\n\t\tpreRender(dialogue: Dialogue): void { }\n\n\t\t/**\n\t\t * Draw a dialogue. This is a no-op.\n\t\t *\n\t\t * @param {!libjass.Dialogue} dialogue\n\t\t */\n\t\tdraw(dialogue: Dialogue): void { }\n\n\t\t/**\n\t\t * Runs when the video starts playing, or is resumed from pause.\n\t\t */\n\t\tonVideoPlaying(): void {\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer.onVideoPlaying: \" + this._getStateLogString());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Runs when the video is paused.\n\t\t */\n\t\tonVideoPause(): void {\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer.onVideoPause: \" + this._getStateLogString());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Runs when the video's current time changed. This might be a result of either regular playback or seeking.\n\t\t */\n\t\tonVideoTimeUpdate(): void {\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer.onVideoTimeUpdate: \" + this._getStateLogString());\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this._ass.dialogues.length; i++) {\n\t\t\t\tvar dialogue = this._ass.dialogues[i];\n\n\t\t\t\tif (dialogue.end > this._currentTime) {\n\t\t\t\t\tif (dialogue.start <= this._currentTime) {\n\t\t\t\t\t\t// This dialogue is visible right now. Draw it.\n\t\t\t\t\t\tthis.draw(dialogue);\n\t\t\t\t\t}\n\t\t\t\t\telse if (dialogue.start <= (this._currentTime + this._settings.preRenderTime)) {\n\t\t\t\t\t\t// This dialogue will be visible soon. Pre-render it.\n\t\t\t\t\t\tthis.preRender(dialogue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _timerTick(): void {\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._timerTick: \" + this._getStateLogString());\n\t\t\t}\n\n\t\t\tif (this._currentTime !== this._video.currentTime) {\n\t\t\t\tthis._currentTime = this._video.currentTime;\n\n\t\t\t\tif (this._state !== RendererState.Playing) {\n\t\t\t\t\tthis._state = RendererState.Playing;\n\n\t\t\t\t\tthis.onVideoPlaying();\n\t\t\t\t}\n\n\t\t\t\tthis.onVideoTimeUpdate();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._state !== RendererState.Paused) {\n\t\t\t\t\tthis._state = RendererState.Paused;\n\n\t\t\t\t\tthis.onVideoPause();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(() => this._timerTick());\n\t\t}\n\n\t\tprivate _onVideoPlaying(): void {\n\t\t\tif (!this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._state === RendererState.Playing) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._onVideoPlaying: \" + this._getStateLogString());\n\t\t\t}\n\n\t\t\tthis._state = RendererState.Playing;\n\n\t\t\tthis.onVideoPlaying();\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._onVideoPlaying: Set NullRenderer._nextAnimationFrameRequestId to \" + this._nextAnimationFrameRequestId);\n\t\t\t}\n\n\t\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\t\tthis._timerTick();\n\t\t\t}\n\t\t}\n\n\t\tprivate _onVideoPause(): void {\n\t\t\tif (!this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._onVideoPause: \" + this._getStateLogString());\n\t\t\t}\n\n\t\t\tthis._state = RendererState.Paused;\n\n\t\t\tthis.onVideoPause();\n\n\t\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\tconsole.warn(\"NullRenderer._onVideoPause: Abnormal state detected. NullRenderer._nextAnimationFrameRequestId should not have been null\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcancelAnimationFrame(this._nextAnimationFrameRequestId);\n\t\t\tthis._nextAnimationFrameRequestId = null;\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._onVideoPause: Cancelled NullRenderer._nextAnimationFrameRequestId\");\n\t\t\t}\n\t\t}\n\n\t\tprivate _onVideoSeeking(): void {\n\t\t\tif (!this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"NullRenderer._onVideoSeeking: \" + this._getStateLogString());\n\t\t\t}\n\n\t\t\tif (this._currentTime === this._video.currentTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._state !== RendererState.Paused) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._currentTime = this._video.currentTime;\n\n\t\t\tthis.onVideoPlaying();\n\t\t\tthis.onVideoTimeUpdate();\n\t\t\tthis.onVideoPause();\n\t\t}\n\n\t\tprivate _getStateLogString(): string {\n\t\t\treturn \"state = \" + RendererState[this._state] + \", video.currentTime = \" + this._video.currentTime + \", video.paused = \" + this._video.paused + \", video.seeking = \" + this._video.seeking;\n\t\t}\n\t}\n\n\tenum RendererState {\n\t\tPlaying = 0,\n\t\tPaused = 1,\n\t}\n\n\t/**\n\t * A default renderer implementation.\n\t *\n\t * @constructor\n\t * @extends {libjass.renderers.NullRenderer}\n\t *\n\t * @param {!HTMLVideoElement} video\n\t * @param {!libjass.ASS} ass\n\t * @param {!libjass.renderers.RendererSettings} settings\n\t *\n\t * @memberof libjass.renderers\n\t */\n\texport class DefaultRenderer extends NullRenderer {\n\t\tprivate _videoSubsWrapper: HTMLDivElement;\n\t\tprivate _subsWrapper: HTMLDivElement;\n\t\tprivate _layerWrappers: HTMLDivElement[] = [];\n\t\tprivate _layerAlignmentWrappers: HTMLDivElement[][] = [];\n\t\tprivate _fontSizeElement: HTMLDivElement = null;\n\t\tprivate _animationStyleElement: HTMLStyleElement = null;\n\t\tprivate _svgDefsElement: SVGDefsElement = null;\n\n\t\tprivate _currentSubs: Map<Dialogue, HTMLDivElement> = new Map<Dialogue, HTMLDivElement>();\n\t\tprivate _preRenderedSubs: Map<number, HTMLDivElement> = new Map<number, HTMLDivElement>();\n\n\t\tprivate _scaleX: number;\n\t\tprivate _scaleY: number;\n\n\t\tprivate _videoIsFullScreen: boolean = false;\n\n\t\tprivate _eventListeners: Map<string, Function[]> = new Map<string, Function[]>();\n\n\t\tconstructor(video: HTMLVideoElement, ass: ASS, settings: RendererSettings) {\n\t\t\tsuper(video, ass, settings);\n\n\t\t\tthis._videoSubsWrapper = document.createElement(\"div\");\n\t\t\tvideo.parentElement.replaceChild(this._videoSubsWrapper, video);\n\n\t\t\tthis._videoSubsWrapper.className = \"libjass-wrapper\";\n\t\t\tthis._videoSubsWrapper.appendChild(video);\n\n\t\t\tthis._subsWrapper = document.createElement(\"div\");\n\t\t\tthis._videoSubsWrapper.appendChild(this._subsWrapper);\n\t\t\tthis._subsWrapper.className = \"libjass-subs\";\n\n\t\t\tthis._fontSizeElement = document.createElement(\"div\");\n\t\t\tthis._videoSubsWrapper.appendChild(this._fontSizeElement);\n\t\t\tthis._fontSizeElement.className = \"libjass-font-measure\";\n\t\t\tthis._fontSizeElement.appendChild(document.createTextNode(\"M\"));\n\n\t\t\tvar svgElement = <SVGSVGElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\t\tthis._videoSubsWrapper.appendChild(svgElement);\n\t\t\tsvgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tsvgElement.setAttribute(\"version\", \"1.1\");\n\t\t\tsvgElement.setAttribute(\"class\", \"libjass-filters\");\n\t\t\tsvgElement.setAttribute(\"width\", \"0\");\n\t\t\tsvgElement.setAttribute(\"height\", \"0\");\n\n\t\t\tthis._svgDefsElement = <SVGDefsElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\t\t\tsvgElement.appendChild(this._svgDefsElement);\n\n\t\t\tif (this.settings.fontMap === null) {\n\t\t\t\tsetTimeout(() => this._ready(), 0);\n\t\t\t}\n\t\t\t// Preload fonts\n\t\t\telse {\n\t\t\t\tvar urlsToPreload: string[] = [];\n\t\t\t\tthis.settings.fontMap.forEach((src: string[], name: string) => {\n\t\t\t\t\turlsToPreload.unshift.apply(urlsToPreload, src);\n\t\t\t\t});\n\n\t\t\t\tvar urlsLeftToPreload = urlsToPreload.length;\n\n\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\tconsole.log(\"Preloading fonts...\");\n\t\t\t\t}\n\n\t\t\t\turlsToPreload.forEach((url: string) => {\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\t\txhr.open(\"GET\", url, true);\n\t\t\t\t\txhr.addEventListener(\"readystatechange\", () => {\n\t\t\t\t\t\tif (xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\t\t\t\tconsole.log(\"Preloaded \" + url + \".\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t--urlsLeftToPreload;\n\n\t\t\t\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\t\t\t\tconsole.log(urlsLeftToPreload + \" fonts left to preload.\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (urlsLeftToPreload === 0) {\n\t\t\t\t\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"All fonts have been preloaded.\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis._ready();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false);\n\t\t\t\t\txhr.send(null);\n\t\t\t\t\treturn xhr;\n\t\t\t\t});\n\n\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\tconsole.log(urlsLeftToPreload + \" fonts left to preload.\");\n\t\t\t\t}\n\n\t\t\t\tif (urlsLeftToPreload === 0) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\t\t\tconsole.log(\"All fonts have been preloaded.\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._ready();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._eventListeners.set(\"ready\", []);\n\t\t\tthis._eventListeners.set(\"fullScreenChange\", []);\n\t\t}\n\n\t\t/**\n\t\t * Add a listener for the given event.\n\t\t *\n\t\t * The \"ready\" event is fired when fonts have been preloaded if settings.preLoadFonts is true, or in the next tick after the DefaultRenderer object is constructed otherwise.\n\t\t *\n\t\t * The \"fullScreenChange\" event is fired when the browser's fullscreenchange event is fired for the video element.\n\t\t *\n\t\t * @param {string} type The type of event to attach the listener for. One of \"ready\" and \"fullScreenChange\".\n\t\t * @param {!Function} listener The listener\n\t\t */\n\t\taddEventListener(type: string, listener: Function): void {\n\t\t\tvar listeners = this._eventListeners.get(type);\n\t\t\tif (listeners !== null) {\n\t\t\t\tlisteners.push(listener);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Resize the subtitles to the given new dimensions.\n\t\t *\n\t\t * @param {number} width\n\t\t * @param {number} height\n\t\t */\n\t\tresize(width: number, height: number): void {\n\t\t\tthis._removeAllSubs();\n\n\t\t\tvar ratio = Math.min(width / this.ass.properties.resolutionX, height / this.ass.properties.resolutionY);\n\t\t\tvar subsWrapperWidth = this.ass.properties.resolutionX * ratio;\n\t\t\tvar subsWrapperHeight = this.ass.properties.resolutionY * ratio;\n\t\t\tthis._subsWrapper.style.width = subsWrapperWidth.toFixed(3) + \"px\";\n\t\t\tthis._subsWrapper.style.height = subsWrapperHeight.toFixed(3) + \"px\";\n\t\t\tthis._subsWrapper.style.left = ((width - subsWrapperWidth) / 2).toFixed(3) + \"px\";\n\t\t\tthis._subsWrapper.style.top = ((height - subsWrapperHeight) / 2).toFixed(3) + \"px\";\n\n\t\t\tthis._scaleX = subsWrapperWidth / this.ass.properties.resolutionX;\n\t\t\tthis._scaleY = subsWrapperHeight / this.ass.properties.resolutionY;\n\n\t\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\n\t\t\tthis._preRenderedSubs.clear();\n\n\t\t\tif (this._animationStyleElement !== null) {\n\t\t\t\twhile (this._animationStyleElement.firstChild !== null) {\n\t\t\t\t\tthis._animationStyleElement.removeChild(this._animationStyleElement.firstChild);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (this._svgDefsElement.firstChild !== null) {\n\t\t\t\tthis._svgDefsElement.removeChild(this._svgDefsElement.firstChild);\n\t\t\t}\n\n\t\t\t// this.currentTime will be undefined if resize() is called before video begins playing for the first time. In this situation, there is no need to force a redraw.\n\t\t\tif (this.currentTime !== undefined) {\n\t\t\t\tthis.onVideoTimeUpdate();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tresizeVideo(width: number, height: number): void {\n\t\t\tconsole.warn(\"`DefaultRenderer.resizeVideo(width, height)` has been deprecated. Use `DefaultRenderer.resize(width, height)` instead.\");\n\t\t\tthis.resize(width, height);\n\t\t}\n\n\t\tenable(): void {\n\t\t\tsuper.enable();\n\n\t\t\tthis._subsWrapper.style.display = \"\";\n\t\t}\n\n\t\tdisable(): void {\n\t\t\tsuper.disable();\n\n\t\t\tthis._subsWrapper.style.display = \"none\";\n\t\t}\n\n\t\t/**\n\t\t * The magic happens here. The subtitle div is rendered and stored. Call draw() to get a clone of the div to display.\n\t\t *\n\t\t * @param {!libjass.Dialogue} dialogue\n\t\t */\n\t\tpreRender(dialogue: Dialogue): void {\n\t\t\tif (this._preRenderedSubs.has(dialogue.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sub = document.createElement(\"div\");\n\n\t\t\tsub.style.marginLeft = (this._scaleX * dialogue.style.marginLeft).toFixed(3) + \"px\";\n\t\t\tsub.style.marginRight = (this._scaleX * dialogue.style.marginRight).toFixed(3) + \"px\";\n\t\t\tsub.style.marginTop = sub.style.marginBottom = (this._scaleY * dialogue.style.marginVertical).toFixed(3) + \"px\";\n\t\t\tsub.style.minWidth = (this._subsWrapper.offsetWidth - 2 * (this._scaleX * dialogue.style.marginLeft)).toFixed(3) + \"px\";\n\n\t\t\tswitch (dialogue.alignment) {\n\t\t\t\tcase 1: case 4: case 7: sub.style.textAlign = \"left\"; break;\n\t\t\t\tcase 2: case 5: case 8: sub.style.textAlign = \"center\"; break;\n\t\t\t\tcase 3: case 6: case 9: sub.style.textAlign = \"right\"; break;\n\t\t\t}\n\n\t\t\tvar animationCollection = new AnimationCollection(this, dialogue);\n\n\t\t\tvar currentSpan: HTMLSpanElement = null;\n\t\t\tvar currentSpanStyles = new SpanStyles(this, dialogue, this._scaleX, this._scaleY, this._fontSizeElement, this._svgDefsElement);\n\n\t\t\tvar startNewSpan = (addNewLine: boolean): void => {\n\t\t\t\tif (currentSpan !== null && currentSpan.textContent !== \"\") {\n\t\t\t\t\tsub.appendChild(currentSpanStyles.setStylesOnSpan(currentSpan));\n\t\t\t\t}\n\n\t\t\t\tif (addNewLine) {\n\t\t\t\t\tsub.appendChild(document.createElement(\"br\"));\n\t\t\t\t}\n\n\t\t\t\tcurrentSpan = document.createElement(\"span\");\n\t\t\t};\n\t\t\tstartNewSpan(false);\n\n\t\t\tvar currentDrawing: Drawing = null;\n\n\t\t\tvar wrappingStyle = this.ass.properties.wrappingStyle;\n\n\t\t\tdialogue.parts.forEach(part => {\n\t\t\t\tif (part instanceof parts.Italic) {\n\t\t\t\t\tcurrentSpanStyles.italic = (<parts.Italic>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Bold) {\n\t\t\t\t\tcurrentSpanStyles.bold = (<parts.Bold>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Underline) {\n\t\t\t\t\tcurrentSpanStyles.underline = (<parts.Underline>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.StrikeThrough) {\n\t\t\t\t\tcurrentSpanStyles.strikeThrough = (<parts.StrikeThrough>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Border) {\n\t\t\t\t\tcurrentSpanStyles.outlineWidth = (<parts.Border>part).value;\n\t\t\t\t\tcurrentSpanStyles.outlineHeight = (<parts.Border>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.BorderX) {\n\t\t\t\t\tcurrentSpanStyles.outlineWidth = (<parts.BorderX>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.BorderY) {\n\t\t\t\t\tcurrentSpanStyles.outlineHeight = (<parts.BorderY>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Shadow) {\n\t\t\t\t\tcurrentSpanStyles.shadowDepthX = (<parts.Shadow>part).value;\n\t\t\t\t\tcurrentSpanStyles.shadowDepthY = (<parts.Shadow>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.ShadowX) {\n\t\t\t\t\tcurrentSpanStyles.shadowDepthX = (<parts.ShadowX>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.ShadowY) {\n\t\t\t\t\tcurrentSpanStyles.shadowDepthY = (<parts.ShadowY>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.GaussianBlur) {\n\t\t\t\t\tcurrentSpanStyles.blur = (<parts.GaussianBlur>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.FontName) {\n\t\t\t\t\tcurrentSpanStyles.fontName = (<parts.FontName>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.FontSize) {\n\t\t\t\t\tcurrentSpanStyles.fontSize = (<parts.FontSize>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.FontScaleX) {\n\t\t\t\t\tcurrentSpanStyles.fontScaleX = (<parts.FontScaleX>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.FontScaleY) {\n\t\t\t\t\tcurrentSpanStyles.fontScaleY = (<parts.FontScaleY>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.LetterSpacing) {\n\t\t\t\t\tcurrentSpanStyles.letterSpacing = (<parts.LetterSpacing>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.RotateX) {\n\t\t\t\t\tcurrentSpanStyles.rotationX = (<parts.RotateX>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.RotateY) {\n\t\t\t\t\tcurrentSpanStyles.rotationY = (<parts.RotateY>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.RotateZ) {\n\t\t\t\t\tcurrentSpanStyles.rotationZ = (<parts.RotateZ>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.SkewX) {\n\t\t\t\t\tcurrentSpanStyles.skewX = (<parts.SkewX>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.SkewY) {\n\t\t\t\t\tcurrentSpanStyles.skewY = (<parts.SkewY>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.PrimaryColor) {\n\t\t\t\t\tcurrentSpanStyles.primaryColor = (<parts.PrimaryColor>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.SecondaryColor) {\n\t\t\t\t\tcurrentSpanStyles.secondaryColor = (<parts.SecondaryColor>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.OutlineColor) {\n\t\t\t\t\tcurrentSpanStyles.outlineColor = (<parts.OutlineColor>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.ShadowColor) {\n\t\t\t\t\tcurrentSpanStyles.shadowColor = (<parts.ShadowColor>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Alpha) {\n\t\t\t\t\tcurrentSpanStyles.primaryAlpha = (<parts.Alpha>part).value;\n\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = (<parts.Alpha>part).value;\n\t\t\t\t\tcurrentSpanStyles.outlineAlpha = (<parts.Alpha>part).value;\n\t\t\t\t\tcurrentSpanStyles.shadowAlpha = (<parts.Alpha>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.PrimaryAlpha) {\n\t\t\t\t\tcurrentSpanStyles.primaryAlpha = (<parts.PrimaryAlpha>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.SecondaryAlpha) {\n\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = (<parts.SecondaryAlpha>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.OutlineAlpha) {\n\t\t\t\t\tcurrentSpanStyles.outlineAlpha = (<parts.OutlineAlpha>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.ShadowAlpha) {\n\t\t\t\t\tcurrentSpanStyles.shadowAlpha = (<parts.ShadowAlpha>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Alignment) {\n\t\t\t\t\t// Already handled in Dialogue\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.WrappingStyle) {\n\t\t\t\t\twrappingStyle = (<parts.WrappingStyle>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Reset) {\n\t\t\t\t\tvar newStyleName = (<parts.Reset>part).value;\n\t\t\t\t\tvar newStyle: Style = null;\n\t\t\t\t\tif (newStyleName !== null) {\n\t\t\t\t\t\tnewStyle = this.ass.styles[newStyleName];\n\t\t\t\t\t}\n\t\t\t\t\tcurrentSpanStyles.reset(newStyle);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Position) {\n\t\t\t\t\tvar positionPart = <parts.Position>part;\n\n\t\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\t\tsub.style.left = (this._scaleX * positionPart.x).toFixed(3) + \"px\";\n\t\t\t\t\tsub.style.top = (this._scaleY * positionPart.y).toFixed(3) + \"px\";\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\t\tvar movePart = <parts.Move>part;\n\n\t\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\t\tanimationCollection.addCustom(\"linear\", [new Keyframe(0, {\n\t\t\t\t\t\tleft: (this._scaleX * movePart.x1).toFixed(3) + \"px\",\n\t\t\t\t\t\ttop: (this._scaleY * movePart.y1).toFixed(3) + \"px\"\n\t\t\t\t\t}), new Keyframe(movePart.t1, {\n\t\t\t\t\t\tleft: (this._scaleX * movePart.x1).toFixed(3) + \"px\",\n\t\t\t\t\t\ttop: (this._scaleY * movePart.y1).toFixed(3) + \"px\"\n\t\t\t\t\t}), new Keyframe(movePart.t2, {\n\t\t\t\t\t\tleft: (this._scaleX * movePart.x2).toFixed(3) + \"px\",\n\t\t\t\t\t\ttop: (this._scaleY * movePart.y2).toFixed(3) + \"px\"\n\t\t\t\t\t}), new Keyframe(dialogue.end - dialogue.start, {\n\t\t\t\t\t\tleft: (this._scaleX * movePart.x2).toFixed(3) + \"px\",\n\t\t\t\t\t\ttop: (this._scaleY * movePart.y2).toFixed(3) + \"px\"\n\t\t\t\t\t})]);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Fade) {\n\t\t\t\t\tvar fadePart = <parts.Fade>part;\n\n\t\t\t\t\tif (fadePart.start !== 0) {\n\t\t\t\t\t\tanimationCollection.addFadeIn(0, fadePart.start);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fadePart.end !== 0) {\n\t\t\t\t\t\tanimationCollection.addFadeOut(dialogue.end - dialogue.start - fadePart.end, fadePart.end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.ComplexFade) {\n\t\t\t\t\tvar complexFadePart = <parts.ComplexFade>part;\n\n\t\t\t\t\tanimationCollection.addCustom(\"linear\", [new Keyframe(0, {\n\t\t\t\t\t\topacity: String(complexFadePart.a1)\n\t\t\t\t\t}), new Keyframe(complexFadePart.t1, {\n\t\t\t\t\t\topacity: String(complexFadePart.a1)\n\t\t\t\t\t}), new Keyframe(complexFadePart.t2, {\n\t\t\t\t\t\topacity: String(complexFadePart.a2)\n\t\t\t\t\t}), new Keyframe(complexFadePart.t3, {\n\t\t\t\t\t\topacity: String(complexFadePart.a2)\n\t\t\t\t\t}), new Keyframe(complexFadePart.t4, {\n\t\t\t\t\t\topacity: String(complexFadePart.a3)\n\t\t\t\t\t}), new Keyframe(dialogue.end, {\n\t\t\t\t\t\topacity: String(complexFadePart.a3)\n\t\t\t\t\t})]);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.DrawingMode) {\n\t\t\t\t\tcurrentDrawing = new Drawing((<parts.DrawingMode>part).scale, this._scaleX, this._scaleY);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.DrawingBaselineOffset) {\n\t\t\t\t\tcurrentDrawing.baselineOffset = (<parts.DrawingBaselineOffset>part).value;\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.DrawingInstructions) {\n\t\t\t\t\tcurrentDrawing.instructions = (<parts.DrawingInstructions>part).instructions;\n\t\t\t\t\tcurrentSpan.appendChild(currentDrawing.toSVG(currentSpanStyles.primaryColor));\n\t\t\t\t\tcurrentDrawing = null;\n\t\t\t\t\tstartNewSpan(false);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.Text || (libjass.debugMode && part instanceof parts.Comment)) {\n\t\t\t\t\tcurrentSpan.appendChild(document.createTextNode((<parts.Text>part).value));\n\t\t\t\t\tstartNewSpan(false);\n\t\t\t\t}\n\n\t\t\t\telse if (part instanceof parts.NewLine) {\n\t\t\t\t\tstartNewSpan(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdialogue.parts.some(part => {\n\t\t\t\tif (part instanceof parts.Position || part instanceof parts.Move) {\n\t\t\t\t\tvar transformOriginParts = DefaultRenderer._getTransformOrigin(dialogue);\n\n\t\t\t\t\tvar translateX = -transformOriginParts[0];\n\t\t\t\t\tvar translateY = -transformOriginParts[1];\n\n\t\t\t\t\tvar divTransformStyle = \"translate(\" + translateX + \"%, \" + translateY + \"%) translate(-\" + sub.style.marginLeft + \", -\" + sub.style.marginTop + \")\";\n\n\t\t\t\t\tvar transformOriginString = transformOriginParts[0] + \"% \" + transformOriginParts[1] + \"%\";\n\t\t\t\t\tsub.style.webkitTransform = divTransformStyle;\n\t\t\t\t\tsub.style.webkitTransformOrigin = transformOriginString;\n\n\t\t\t\t\tsub.style.transform = divTransformStyle;\n\t\t\t\t\tsub.style.transformOrigin = transformOriginString;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tswitch (wrappingStyle) {\n\t\t\t\tcase WrappingStyle.SmartWrappingWithWiderTopLine:\n\t\t\t\tcase WrappingStyle.SmartWrappingWithWiderBottomLine:\n\t\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrappingStyle.EndOfLineWrapping:\n\t\t\t\tcase WrappingStyle.NoLineWrapping:\n\t\t\t\t\tsub.style.whiteSpace = \"pre\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this._animationStyleElement === null) {\n\t\t\t\tthis._animationStyleElement = document.createElement(\"style\");\n\t\t\t\tthis._animationStyleElement.id = \"libjass-animation-styles-\" + this.id;\n\t\t\t\tthis._animationStyleElement.type = \"text/css\";\n\t\t\t\tdocument.querySelector(\"head\").appendChild(this._animationStyleElement);\n\t\t\t}\n\n\t\t\tthis._animationStyleElement.appendChild(document.createTextNode(animationCollection.cssText));\n\n\t\t\tsub.style.webkitAnimation = animationCollection.animationStyle;\n\t\t\tsub.style.animation = animationCollection.animationStyle;\n\n\t\t\tsub.setAttribute(\"data-dialogue-id\", this.id + \"-\" + dialogue.id);\n\n\t\t\tthis._preRenderedSubs.set(dialogue.id, sub);\n\t\t}\n\n\t\t/**\n\t\t * Returns the subtitle div for display. The currentTime is used to shift the animations appropriately, so that at the time the\n\t\t * div is inserted into the DOM and the animations begin, they are in sync with the video time.\n\t\t *\n\t\t * @param {!libjass.Dialogue} dialogue\n\t\t */\n\t\tdraw(dialogue: Dialogue): void {\n\t\t\tif (this._currentSubs.has(dialogue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (libjass.debugMode) {\n\t\t\t\tconsole.log(dialogue.toString());\n\t\t\t}\n\n\t\t\tvar preRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\n\t\t\tif (preRenderedSub === undefined) {\n\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\tconsole.warn(\"This dialogue was not pre-rendered. Call preRender() before calling draw() so that draw() is faster.\");\n\t\t\t\t}\n\n\t\t\t\tthis.preRender(dialogue);\n\t\t\t\tpreRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\n\t\t\t\tif (libjass.debugMode) {\n\t\t\t\t\tconsole.log(dialogue.toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar result = <HTMLDivElement>preRenderedSub.cloneNode(true);\n\n\t\t\tvar defaultAnimationDelay = result.style.webkitAnimationDelay;\n\t\t\tif (defaultAnimationDelay === undefined) {\n\t\t\t\tdefaultAnimationDelay = result.style.animationDelay;\n\t\t\t}\n\t\t\tif (defaultAnimationDelay !== \"\") {\n\t\t\t\tvar animationDelay =\n\t\t\t\t\tdefaultAnimationDelay\n\t\t\t\t\t.split(\",\")\n\t\t\t\t\t.map(delay => (parseFloat(delay) + dialogue.start - this.currentTime).toFixed(3) + \"s\")\n\t\t\t\t\t.join(\",\");\n\n\t\t\t\tresult.style.webkitAnimationDelay = animationDelay;\n\t\t\t\tresult.style.animationDelay = animationDelay;\n\t\t\t}\n\n\t\t\tvar layer = dialogue.layer;\n\t\t\tvar alignment = (result.style.position === \"absolute\") ? 0 : dialogue.alignment; // Alignment 0 is for absolutely-positioned subs\n\n\t\t\t// Create the layer wrapper div and the alignment div inside it if not already created\n\t\t\tif (this._layerWrappers[layer] === undefined) {\n\t\t\t\tvar layerWrapper = document.createElement(\"div\");\n\t\t\t\tlayerWrapper.className = \"layer layer\" + layer;\n\n\t\t\t\t// Find the next greater layer div and insert this div before that one\n\t\t\t\tvar insertBeforeElement: HTMLDivElement = null;\n\t\t\t\tfor (var insertBeforeLayer = layer + 1; insertBeforeLayer < this._layerWrappers.length && insertBeforeElement === null; insertBeforeLayer++) {\n\t\t\t\t\tif (this._layerWrappers[insertBeforeLayer] !== undefined) {\n\t\t\t\t\t\tinsertBeforeElement = this._layerWrappers[insertBeforeLayer];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._subsWrapper.insertBefore(layerWrapper, insertBeforeElement);\n\n\t\t\t\tthis._layerWrappers[layer] = layerWrapper;\n\t\t\t\tthis._layerAlignmentWrappers[layer] = [];\n\t\t\t}\n\n\t\t\tif (this._layerAlignmentWrappers[layer][alignment] === undefined) {\n\t\t\t\tvar layerAlignmentWrapper = document.createElement(\"div\");\n\t\t\t\tlayerAlignmentWrapper.className = \"an an\" + alignment;\n\n\t\t\t\t// Find the next greater layer,alignment div and insert this div before that one\n\t\t\t\tvar layerWrapper = this._layerWrappers[layer];\n\t\t\t\tvar insertBeforeElement: HTMLDivElement = null;\n\t\t\t\tfor (var insertBeforeAlignment = alignment + 1; insertBeforeAlignment < this._layerAlignmentWrappers[layer].length && insertBeforeElement === null; insertBeforeAlignment++) {\n\t\t\t\t\tif (this._layerAlignmentWrappers[layer][insertBeforeAlignment] !== undefined) {\n\t\t\t\t\t\tinsertBeforeElement = this._layerAlignmentWrappers[layer][insertBeforeAlignment];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayerWrapper.insertBefore(layerAlignmentWrapper, insertBeforeElement);\n\n\t\t\t\tthis._layerAlignmentWrappers[layer][alignment] = layerAlignmentWrapper;\n\t\t\t}\n\n\t\t\tthis._layerAlignmentWrappers[layer][alignment].appendChild(result);\n\n\t\t\tthis._currentSubs.set(dialogue, result);\n\t\t}\n\n\t\tonVideoPlaying(): void {\n\t\t\tsuper.onVideoPlaying();\n\n\t\t\tthis._removeAllSubs();\n\n\t\t\tthis._subsWrapper.classList.remove(\"paused\");\n\t\t}\n\n\t\tonVideoPause(): void {\n\t\t\tsuper.onVideoPause();\n\n\t\t\tthis._subsWrapper.classList.add(\"paused\");\n\t\t}\n\n\t\tonVideoTimeUpdate(): void {\n\t\t\tsuper.onVideoTimeUpdate();\n\n\t\t\tthis._currentSubs.forEach((sub: HTMLDivElement, dialogue: Dialogue) => {\n\t\t\t\tif (dialogue.start > this.currentTime || dialogue.end < this.currentTime) {\n\t\t\t\t\tthis._currentSubs.delete(dialogue);\n\t\t\t\t\tthis._removeSub(sub);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprivate _ready(): void {\n\t\t\tdocument.addEventListener(\"webkitfullscreenchange\", event => this._onFullScreenChange(), false);\n\t\t\tdocument.addEventListener(\"mozfullscreenchange\", event => this._onFullScreenChange(), false);\n\t\t\tdocument.addEventListener(\"fullscreenchange\", event => this._onFullScreenChange(), false);\n\n\t\t\tthis.resize(this.video.offsetWidth, this.video.offsetHeight);\n\n\t\t\tthis._dispatchEvent(\"ready\", []);\n\t\t}\n\n\t\tprivate _onFullScreenChange() {\n\t\t\tvar fullScreenElement = document.fullscreenElement;\n\t\t\tif (fullScreenElement === undefined) {\n\t\t\t\tfullScreenElement = document.mozFullScreenElement;\n\t\t\t}\n\t\t\tif (fullScreenElement === undefined) {\n\t\t\t\tfullScreenElement = document.msFullscreenElement;\n\t\t\t}\n\t\t\tif (fullScreenElement === undefined) {\n\t\t\t\tfullScreenElement = document.webkitFullscreenElement;\n\t\t\t}\n\n\t\t\tif (fullScreenElement === this.video) {\n\t\t\t\tthis._videoSubsWrapper.classList.add(\"libjass-full-screen\");\n\n\t\t\t\tthis.resize(screen.width, screen.height);\n\n\t\t\t\tthis._videoIsFullScreen = true;\n\n\t\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\n\t\t\t}\n\t\t\telse if (fullScreenElement === null && this._videoIsFullScreen) {\n\t\t\t\tthis._videoSubsWrapper.classList.remove(\"libjass-full-screen\");\n\n\t\t\t\tthis._videoIsFullScreen = false;\n\n\t\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {!Array.<*>} args\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _dispatchEvent(type: string, args: Object[]): void {\n\t\t\tvar listeners = this._eventListeners.get(type);\n\t\t\tif (listeners !== null) {\n\t\t\t\tlisteners.forEach((listener: Function) => {\n\t\t\t\t\tlistener.apply(this, args);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate _removeSub(sub: HTMLDivElement): void {\n\t\t\tsub.parentNode.removeChild(sub);\n\t\t}\n\n\t\tprivate _removeAllSubs(): void {\n\t\t\tthis._currentSubs.forEach((sub: HTMLDivElement) => this._removeSub(sub));\n\t\t\tthis._currentSubs.clear();\n\t\t}\n\n\t\tprivate static _getTransformOrigin(dialogue: Dialogue): number[] {\n\t\t\tvar transformOriginX: number;\n\t\t\tvar transformOriginY: number;\n\n\t\t\tswitch (dialogue.alignment) {\n\t\t\t\tcase 1: transformOriginX =   0; transformOriginY = 100; break;\n\t\t\t\tcase 2: transformOriginX =  50; transformOriginY = 100; break;\n\t\t\t\tcase 3: transformOriginX = 100; transformOriginY = 100; break;\n\t\t\t\tcase 4: transformOriginX =   0; transformOriginY =  50; break;\n\t\t\t\tcase 5: transformOriginX =  50; transformOriginY =  50; break;\n\t\t\t\tcase 6: transformOriginX = 100; transformOriginY =  50; break;\n\t\t\t\tcase 7: transformOriginX =   0; transformOriginY =   0; break;\n\t\t\t\tcase 8: transformOriginX =  50; transformOriginY =   0; break;\n\t\t\t\tcase 9: transformOriginX = 100; transformOriginY =   0; break;\n\t\t\t}\n\n\t\t\treturn [transformOriginX, transformOriginY];\n\t\t}\n\t}\n\n\t/**\n\t * Settings for the default renderer.\n\t *\n\t * @constructor\n\t *\n\t * @memberof libjass.renderers\n\t */\n\texport class RendererSettings {\n\t\t/**\n\t\t * A map of font name to one or more URLs of that font. If provided, the fonts in this map are pre-loaded by the DefaultRenderer before it begins playing the video.\n\t\t *\n\t\t * If you have a <style> or <link> element on the page containing @font-face rules, you can use the RendererSettings.makeFontMapFromStyleElement() convenience method to create a font map.\n\t\t *\n\t\t * @type {!Map.<string, !Array.<string>>}\n\t\t */\n\t\tfontMap: Map<string, string[]>;\n\n\t\t/**\n\t\t * Subtitles will be pre-rendered for this amount of time (seconds)\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tpreRenderTime: number;\n\n\t\t/**\n\t\t * A convenience method to create a font map from a <style> or <link> element that contains @font-face rules.\n\t\t *\n\t\t * @param {!LinkStyle} linkStyle\n\t\t * @return {!Map.<string, !Array.<string>>}\n\t\t *\n\t\t * @static\n\t\t */\n\t\tstatic makeFontMapFromStyleElement(linkStyle: LinkStyle): Map<string, string[]> {\n\t\t\tvar map = new Map<string, string[]>();\n\n\t\t\tvar styleSheet = <CSSStyleSheet>linkStyle.sheet;\n\t\t\tvar rules: CSSFontFaceRule[] = Array.prototype.filter.call(styleSheet.cssRules, (rule: CSSRule) => rule.type === CSSRule.FONT_FACE_RULE);\n\t\t\trules.forEach((rule: CSSFontFaceRule) => {\n\t\t\t\tvar src = rule.style.getPropertyValue(\"src\");\n\t\t\t\tvar urls: string[] = [];\n\n\t\t\t\tif (!src) {\n\t\t\t\t\tsrc = rule.cssText.split(\"\\n\")\n\t\t\t\t\t\t.map((line: string) => line.match(/src: ([^;]+);/))\n\t\t\t\t\t\t.filter((matches: string[]) => matches !== null)\n\t\t\t\t\t\t.map((matches: string[]) => matches[1])[0];\n\t\t\t\t}\n\n\t\t\t\turls = src.split(/,\\s*/).map((url: string) => url.match(/^url\\((.+)\\)$/)[1]);\n\n\t\t\t\tif (urls.length > 0) {\n\t\t\t\t\tvar name = RendererSettings._stripQuotes(rule.style.getPropertyValue(\"font-family\"));\n\t\t\t\t\tvar existingList = map.get(name);\n\t\t\t\t\tif (existingList === undefined) {\n\t\t\t\t\t\texistingList = [];\n\t\t\t\t\t\tmap.set(name, existingList);\n\t\t\t\t\t}\n\t\t\t\t\texistingList.unshift.apply(existingList, urls.map(RendererSettings._stripQuotes));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn map;\n\t\t}\n\n\t\t/**\n\t\t * Converts an arbitrary object into a RendererSettings object.\n\t\t *\n\t\t * @param {!*} object\n\t\t * @return {!libjass.renderers.RendererSettings}\n\t\t *\n\t\t * @static\n\t\t */\n\t\tstatic from(object: any): RendererSettings {\n\t\t\treturn RendererSettings._from(object.fontMap, object.preRenderTime);\n\t\t}\n\n\t\tprivate static _from(fontMap: Map<string, string[]> = null, preRenderTime: number = 5): RendererSettings {\n\t\t\tvar result = new RendererSettings();\n\t\t\tresult.fontMap = fontMap;\n\t\t\tresult.preRenderTime = preRenderTime;\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate static _stripQuotes(str: string): string {\n\t\t\treturn str.match(/^[\"']?(.*?)[\"']?$/)[1];\n\t\t}\n\t}\n\n\tinterface KeyframePropertiesMap {\n\t\t[key: string]: string;\n\t}\n\n\t/**\n\t * This class represents a single keyframe. It has a list of CSS properties (names and values) associated with a point in time. Multiple keyframes make up an animation.\n\t *\n\t * @constructor\n\t * @param {number} time\n\t * @param {!Object.<string, string>} properties\n\t *\n\t * @private\n\t * @memberof libjass.renderers\n\t */\n\tclass Keyframe {\n\t\tconstructor(private _time: number, private _properties: KeyframePropertiesMap) { }\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tget time(): number {\n\t\t\treturn this._time;\n\t\t}\n\n\t\t/**\n\t\t * @type {!Object.<string, string>}\n\t\t */\n\t\tget properties(): KeyframePropertiesMap {\n\t\t\treturn this._properties;\n\t\t}\n\t}\n\n\t/**\n\t * This class represents a collection of animations. Each animation contains one or more keyframes.\n\t * The collection can then be converted to a CSS3 representation.\n\t *\n\t * @constructor\n\t * @param {!libjass.renderers.NullRenderer} renderer The renderer that this collection is associated with\n\t * @param {!libjass.Dialogue} dialogue The Dialogue that this collection is associated with\n\t *\n\t * @private\n\t * @memberof libjass.renderers\n\t */\n\tclass AnimationCollection {\n\t\tprivate _id: string;\n\t\tprivate _start: number;\n\t\tprivate _end: number;\n\n\t\tprivate _cssText: string = \"\";\n\t\tprivate _animationStyle: string = \"\";\n\t\tprivate _numAnimations: number = 0;\n\n\t\tconstructor(renderer: NullRenderer, dialogue: Dialogue) {\n\t\t\tthis._id = renderer.id + \"-\" + dialogue.id;\n\t\t\tthis._start = dialogue.start;\n\t\t\tthis._end = dialogue.end;\n\t\t}\n\n\t\t/**\n\t\t * This string contains the animation definitions and should be inserted into a <style> element.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget cssText(): string {\n\t\t\treturn this._cssText;\n\t\t}\n\n\t\t/**\n\t\t * This string should be set as the \"animation\" CSS property of the target element.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget animationStyle(): string {\n\t\t\treturn this._animationStyle;\n\t\t}\n\n\t\t/**\n\t\t * Add a fade-in animation to this collection.\n\t\t *\n\t\t * @param {number} start The time from the dialogue start to start the fade-in\n\t\t * @param {number} duration The duration of the fade-in\n\t\t */\n\t\taddFadeIn(start: number, duration: number) {\n\t\t\tif (this._animationStyle !== \"\") {\n\t\t\t\tthis._animationStyle += \",\";\n\t\t\t}\n\n\t\t\tthis._animationStyle += \"fade-in \" + duration.toFixed(3) + \"s linear \" + start.toFixed(3) + \"s\";\n\t\t}\n\n\t\t/**\n\t\t * Add a fade-out animation to this collection.\n\t\t *\n\t\t * @param {number} start The time from the dialogue start to start the fade-out\n\t\t * @param {number} duration The duration of the fade-out\n\t\t */\n\t\taddFadeOut(start: number, duration: number) {\n\t\t\tif (this._animationStyle !== \"\") {\n\t\t\t\tthis._animationStyle += \",\";\n\t\t\t}\n\n\t\t\tthis._animationStyle += \"fade-out \" + duration.toFixed(3) + \"s linear \" + start.toFixed(3) + \"s\";\n\t\t}\n\n\t\t/**\n\t\t * Add a custom animation to this collection. The given keyframes together make one animation.\n\t\t *\n\t\t * @param {string} timingFunction One of the acceptable values for the \"animation-timing-function\" CSS property\n\t\t * @param {Array.<!{time: number, properties: !Object.<string, string>}>} keyframes\n\t\t */\n\t\taddCustom(timingFunction: string, keyframes: Keyframe[]) {\n\t\t\tvar startTime: number = null;\n\t\t\tvar endTime: number = null;\n\n\t\t\tvar ruleCssText = \"\";\n\n\t\t\tkeyframes.forEach(keyframe => {\n\t\t\t\tif (startTime === null) {\n\t\t\t\t\tstartTime = keyframe.time;\n\t\t\t\t}\n\n\t\t\t\tendTime = keyframe.time;\n\n\t\t\t\truleCssText += \"\\t\" + (100 * keyframe.time / (this._end - this._start)).toFixed(3) + \"% {\\n\";\n\n\t\t\t\tObject.keys(keyframe.properties).forEach(propertyName => {\n\t\t\t\t\truleCssText += \"\\t\\t\" + propertyName + \": \" + keyframe.properties[propertyName] + \";\\n\";\n\t\t\t\t});\n\n\t\t\t\truleCssText += \"\\t}\\n\";\n\t\t\t});\n\n\t\t\tvar animationName = \"dialogue-\" + this._id + \"-\" + this._numAnimations++;\n\n\t\t\tthis._cssText +=\n\t\t\t\t\"@-webkit-keyframes \" + animationName + \" {\\n\" + ruleCssText + \"}\\n\\n\" +\n\t\t\t\t\"@keyframes \" + animationName + \" {\\n\" + ruleCssText + \"}\\n\\n\";\n\n\t\t\tif (this._animationStyle !== \"\") {\n\t\t\t\tthis._animationStyle += \",\";\n\t\t\t}\n\n\t\t\tthis._animationStyle += animationName + \" \" + (endTime - startTime).toFixed(3) + \"s \" + timingFunction + \" \" + startTime.toFixed(3) + \"s\";\n\t\t}\n\t}\n\n\t/**\n\t * This class represents the style attribute of a span.\n\t * As a Dialogue's div is rendered, individual parts are added to span's, and this class is used to maintain the style attribute of those.\n\t *\n\t * @constructor\n\t * @param {!libjass.renderers.NullRenderer} renderer The renderer that this set of styles is associated with\n\t * @param {!libjass.Dialogue} dialogue The Dialogue that this set of styles is associated with\n\t * @param {number} scaleX The horizontal scaling of the subtitles\n\t * @param {number} scaleY The vertical scaling of the subtitles\n\t * @param {!HTMLDivElement} fontSizeElement A <div> element to measure font sizes with\n\t * @param {!SVGDefsElement} svgDefsElement An SVG <defs> element to append filter definitions to\n\t *\n\t * @private\n\t * @memberof libjass.renderers\n\t */\n\tclass SpanStyles {\n\t\tprivate static _fontSizeCache: Map<string, Map<number, number>> = new Map<string, Map<number, number>>();\n\n\t\tprivate _id: string;\n\t\tprivate _defaultStyle: Style;\n\n\t\tprivate _italic: boolean;\n\t\tprivate _bold: Object;\n\t\tprivate _underline: boolean;\n\t\tprivate _strikeThrough: boolean;\n\n\t\tprivate _outlineWidth: number;\n\t\tprivate _outlineHeight: number;\n\n\t\tprivate _shadowDepthX: number;\n\t\tprivate _shadowDepthY: number;\n\n\t\tprivate _fontName: string;\n\t\tprivate _fontSize: number;\n\n\t\tprivate _fontScaleX: number;\n\t\tprivate _fontScaleY: number;\n\n\t\tprivate _letterSpacing: number;\n\n\t\tprivate _rotationX: number;\n\t\tprivate _rotationY: number;\n\t\tprivate _rotationZ: number;\n\n\t\tprivate _skewX: number;\n\t\tprivate _skewY: number;\n\n\t\tprivate _primaryColor: parts.Color;\n\t\tprivate _secondaryColor: parts.Color;\n\t\tprivate _outlineColor: parts.Color;\n\t\tprivate _shadowColor: parts.Color;\n\n\t\tprivate _primaryAlpha: number;\n\t\tprivate _secondaryAlpha: number;\n\t\tprivate _outlineAlpha: number;\n\t\tprivate _shadowAlpha: number;\n\n\t\tprivate _blur: number;\n\n\t\tprivate _nextFilterId = 0;\n\n\t\tconstructor(renderer: NullRenderer, dialogue: Dialogue, private _scaleX: number, private _scaleY: number, private _fontSizeElement: HTMLDivElement, private _svgDefsElement: SVGDefsElement) {\n\t\t\tthis._id = renderer.id + \"-\" + dialogue.id;\n\t\t\tthis._defaultStyle = dialogue.style;\n\n\t\t\tthis.reset(null);\n\t\t}\n\n\t\t/**\n\t\t * Resets the styles to the defaults provided by the argument.\n\t\t *\n\t\t * @param {libjass.Style} newStyle The new defaults to reset the style to. If null, the styles are reset to the default style of the Dialogue.\n\t\t */\n\t\treset(newStyle: Style): void {\n\t\t\tif (newStyle === undefined || newStyle === null) {\n\t\t\t\tnewStyle = this._defaultStyle;\n\t\t\t}\n\n\t\t\tthis.italic = newStyle.italic;\n\t\t\tthis.bold = newStyle.bold;\n\t\t\tthis.underline = newStyle.underline;\n\t\t\tthis.strikeThrough = newStyle.strikeThrough;\n\n\t\t\tthis.outlineWidth = newStyle.outlineThickness;\n\t\t\tthis.outlineHeight = newStyle.outlineThickness;\n\n\t\t\tthis.shadowDepthX = newStyle.shadowDepth;\n\t\t\tthis.shadowDepthY = newStyle.shadowDepth;\n\n\t\t\tthis.fontName = newStyle.fontName;\n\t\t\tthis.fontSize = newStyle.fontSize;\n\n\t\t\tthis.fontScaleX = newStyle.fontScaleX;\n\t\t\tthis.fontScaleY = newStyle.fontScaleY;\n\n\t\t\tthis.letterSpacing = newStyle.letterSpacing;\n\n\t\t\tthis._rotationX = null;\n\t\t\tthis._rotationY = null;\n\t\t\tthis._rotationZ = newStyle.rotationZ;\n\n\t\t\tthis._skewX = null;\n\t\t\tthis._skewY = null;\n\n\t\t\tthis.primaryColor = newStyle.primaryColor;\n\t\t\tthis.secondaryColor = newStyle.secondaryColor;\n\t\t\tthis.outlineColor = newStyle.outlineColor;\n\t\t\tthis.shadowColor = newStyle.shadowColor;\n\n\t\t\tthis.primaryAlpha = null;\n\t\t\tthis.secondaryAlpha = null;\n\t\t\tthis.outlineAlpha = null;\n\t\t\tthis.shadowAlpha = null;\n\n\t\t\tthis.blur = null;\n\t\t}\n\n\t\t/**\n\t\t * Sets the style attribute on the given span element.\n\t\t *\n\t\t * @param {!HTMLSpanElement} span\n\t\t * @return {!HTMLSpanElement} The resulting <span> with the CSS styles applied. This may be a wrapper around the input <span> if the styles were applied using SVG filters.\n\t\t */\n\t\tsetStylesOnSpan(span: HTMLSpanElement): HTMLSpanElement {\n\t\t\tvar fontStyleOrWeight = \"\";\n\t\t\tif (this._italic) {\n\t\t\t\tfontStyleOrWeight += \"italic \";\n\t\t\t}\n\t\t\tif (this._bold === true) {\n\t\t\t\tfontStyleOrWeight += \"bold \";\n\t\t\t}\n\t\t\telse if (this._bold !== false) {\n\t\t\t\tfontStyleOrWeight += (<string>this._bold + \" \");\n\t\t\t}\n\t\t\tvar fontSize = (this._scaleY * SpanStyles._getFontSize(this._fontName, this._fontSize, this._fontSizeElement)).toFixed(3);\n\t\t\tvar lineHeight = (this._scaleY * this._fontSize).toFixed(3);\n\t\t\tspan.style.font = fontStyleOrWeight + fontSize + \"px/\" + lineHeight + \"px \\\"\" + this._fontName + \"\\\"\";\n\n\t\t\tvar textDecoration = \"\";\n\t\t\tif (this._underline) {\n\t\t\t\ttextDecoration = \"underline\";\n\t\t\t}\n\t\t\tif (this._strikeThrough) {\n\t\t\t\ttextDecoration += \" line-through\";\n\t\t\t}\n\t\t\tspan.style.textDecoration = textDecoration.trim();\n\n\t\t\tvar transform = \"\";\n\t\t\tif (this._fontScaleX !== 1) {\n\t\t\t\ttransform += \"scaleX(\" + this._fontScaleX + \") \";\n\t\t\t}\n\t\t\tif (this._fontScaleY !== 1) {\n\t\t\t\ttransform += \"scaleY(\" + this._fontScaleY + \") \";\n\t\t\t}\n\t\t\tif (this._rotationY !== null) {\n\t\t\t\ttransform += \"rotateY(\" + this._rotationY + \"deg) \";\n\t\t\t}\n\t\t\tif (this._rotationX !== null) {\n\t\t\t\ttransform += \"rotateX(\" + this._rotationX + \"deg) \";\n\t\t\t}\n\t\t\tif (this._rotationZ !== 0) {\n\t\t\t\ttransform += \"rotateZ(\" + (-1 * this._rotationZ) + \"deg) \";\n\t\t\t}\n\t\t\tif (this._skewX !== null || this._skewY !== null) {\n\t\t\t\tvar skewX = SpanStyles._valueOrDefault(this._skewX, 0);\n\t\t\t\tvar skewY = SpanStyles._valueOrDefault(this._skewY, 0);\n\t\t\t\ttransform += \"matrix(1, \" + skewY + \", \" + skewX + \", 1, 0, 0) \";\n\t\t\t}\n\t\t\tif (transform !== \"\") {\n\t\t\t\tspan.style.webkitTransform = transform;\n\t\t\t\tspan.style.webkitTransformOrigin = \"50% 50%\";\n\t\t\t\tspan.style.transform = transform;\n\t\t\t\tspan.style.transformOrigin = \"50% 50%\";\n\t\t\t\tspan.style.display = \"inline-block\";\n\t\t\t}\n\n\t\t\tspan.style.letterSpacing = (this._scaleX * this._letterSpacing).toFixed(3) + \"px\";\n\n\t\t\tvar primaryColor = this._primaryColor.withAlpha(this._primaryAlpha);\n\t\t\tspan.style.color = primaryColor.toString();\n\n\t\t\tvar outlineColor = this._outlineColor.withAlpha(this._outlineAlpha);\n\n\t\t\tvar outlineWidth = (this._scaleX * this._outlineWidth);\n\t\t\tvar outlineHeight = (this._scaleY * this._outlineHeight);\n\n\t\t\tvar filterId = \"svg-filter-\" + this._id + \"-\" + this._nextFilterId++;\n\n\t\t\tvar outlineFilter = '';\n\t\t\tif (outlineWidth > 0 || outlineHeight > 0) {\n\t\t\t\tvar mergeOutlinesFilter = '';\n\n\t\t\t\tvar radiiPairs: number[][] = [];\n\n\t\t\t\tif (outlineWidth >= outlineHeight) {\n\t\t\t\t\tif (outlineHeight > 0) {\n\t\t\t\t\t\tfor (var y = 0; y <= outlineHeight; y++) {\n\t\t\t\t\t\t\tradiiPairs.push([outlineWidth / outlineHeight * Math.sqrt(outlineHeight * outlineHeight - y * y), y]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tradiiPairs.push([outlineWidth, 0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (outlineWidth > 0) {\n\t\t\t\t\t\tfor (var x = 0; x <= outlineWidth; x++) {\n\t\t\t\t\t\t\tradiiPairs.push([x, outlineHeight / outlineWidth * Math.sqrt(outlineWidth * outlineWidth - x * x)]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tradiiPairs.push([0, outlineHeight]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tradiiPairs.forEach((radii, index) => {\n\t\t\t\t\toutlineFilter +=\n\t\t\t\t\t\t'\\t<feMorphology in=\"SourceAlpha\" operator=\"dilate\" radius=\"' + radii[0].toFixed(3) + ' ' + radii[1].toFixed(3) + '\" result=\"outline' + index + '\" />\\n';\n\n\t\t\t\t\tmergeOutlinesFilter +=\n\t\t\t\t\t\t'\\t\\t<feMergeNode in=\"outline' + index + '\" />\\n';\n\t\t\t\t});\n\n\t\t\t\toutlineFilter =\n\t\t\t\t\t'\\t<feFlood flood-color=\"' + outlineColor.toString() + '\" result=\"outlineColor\"/>' +\n\t\t\t\t\toutlineFilter +\n\t\t\t\t\t'\\t<feMerge>\\n' +\n\t\t\t\t\tmergeOutlinesFilter +\n\t\t\t\t\t'\\t</feMerge>\\n' +\n\t\t\t\t\t'\\t<feComposite operator=\"in\" in=\"outlineColor\" />';\n\t\t\t}\n\n\t\t\tvar blurFilter = '';\n\t\t\tif (this._blur > 0) {\n\t\t\t\tblurFilter =\n\t\t\t\t\t'\\t<feGaussianBlur stdDeviation=\"' + this._blur + '\" />\\n';\n\t\t\t}\n\n\t\t\tvar filterWrapperSpan = document.createElement(\"span\");\n\t\t\tfilterWrapperSpan.appendChild(span);\n\n\t\t\tif (outlineFilter !== '' || blurFilter !== '') {\n\t\t\t\tvar filterString =\n\t\t\t\t\t'<filter xmlns=\"http://www.w3.org/2000/svg\" id=\"' + filterId + '\">\\n' +\n\t\t\t\t\toutlineFilter +\n\t\t\t\t\tblurFilter +\n\t\t\t\t\t'\\t<feMerge>\\n' +\n\t\t\t\t\t'\\t\\t<feMergeNode />\\n' +\n\t\t\t\t\t'\\t\\t<feMergeNode in=\"SourceGraphic\" />\\n' +\n\t\t\t\t\t'\\t</feMerge>\\n' +\n\t\t\t\t\t'</filter>\\n';\n\n\t\t\t\tvar filterElement = domParser.parseFromString(filterString, \"image/svg+xml\").childNodes[0];\n\n\t\t\t\tthis._svgDefsElement.appendChild(filterElement);\n\n\t\t\t\tfilterWrapperSpan.style.webkitFilter = 'url(\"#' + filterId + '\")';\n\t\t\t\tfilterWrapperSpan.style.filter = 'url(\"#' + filterId + '\")';\n\t\t\t}\n\n\t\t\tif (this._shadowDepthX !== 0 || this._shadowDepthY !== 0) {\n\t\t\t\tvar shadowColor = this._shadowColor.withAlpha(this._shadowAlpha);\n\t\t\t\tspan.style.textShadow = shadowColor.toString() + \" \" + (this._shadowDepthX * this._scaleX / this._fontScaleX).toFixed(3) + \"px \" + (this._shadowDepthY * this._scaleY / this._fontScaleY).toFixed(3) + \"px 0px\";\n\t\t\t}\n\n\t\t\tif (this._rotationZ !== null) {\n\t\t\t\t// Perspective needs to be set on a \"transformable element\"\n\t\t\t\tfilterWrapperSpan.style.display = \"inline-block\";\n\t\t\t}\n\n\t\t\treturn filterWrapperSpan;\n\t\t}\n\n\t\t/**\n\t\t * Sets the italic property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tset italic(value: boolean) {\n\t\t\tthis._italic = SpanStyles._valueOrDefault(value, this._defaultStyle.italic);\n\t\t}\n\n\t\t/**\n\t\t * Sets the bold property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {(?number|?boolean)}\n\t\t */\n\t\tset bold(value: Object) {\n\t\t\tthis._bold = SpanStyles._valueOrDefault(value, this._defaultStyle.bold);\n\t\t}\n\n\t\t/**\n\t\t * Sets the underline property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tset underline(value: boolean) {\n\t\t\tthis._underline = SpanStyles._valueOrDefault(value, this._defaultStyle.underline);\n\t\t}\n\n\t\t/**\n\t\t * Sets the strike-through property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?boolean}\n\t\t */\n\t\tset strikeThrough(value: boolean) {\n\t\t\tthis._strikeThrough = SpanStyles._valueOrDefault(value, this._defaultStyle.strikeThrough);\n\t\t}\n\n\t\t/**\n\t\t * Sets the outline width property. null defaults it to the style's original outline width value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset outlineWidth(value: number) {\n\t\t\tthis._outlineWidth = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t\t}\n\n\t\t/**\n\t\t * Sets the outline height property. null defaults it to the style's original outline height value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset outlineHeight(value: number) {\n\t\t\tthis._outlineHeight = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t\t}\n\n\t\t/**\n\t\t * Sets the outline width property. null defaults it to the style's original shadow depth X value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset shadowDepthX(value: number) {\n\t\t\tthis._shadowDepthX = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t\t}\n\n\t\t/**\n\t\t * Sets the shadow height property. null defaults it to the style's original shadow depth Y value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset shadowDepthY(value: number) {\n\t\t\tthis._shadowDepthY = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t\t}\n\n\t\t/**\n\t\t * Sets the blur property. null defaults it to 0.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset blur(value: number) {\n\t\t\tthis._blur = SpanStyles._valueOrDefault(value, 0);\n\t\t}\n\n\t\t/**\n\t\t * Sets the font name property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?string}\n\t\t */\n\t\tset fontName(value: string) {\n\t\t\tthis._fontName = SpanStyles._valueOrDefault(value, this._defaultStyle.fontName);\n\t\t}\n\n\t\t/**\n\t\t * Sets the font size property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset fontSize(value: number) {\n\t\t\tthis._fontSize = SpanStyles._valueOrDefault(value, this._defaultStyle.fontSize);\n\t\t}\n\n\t\t/**\n\t\t * Sets the horizontal font scaling property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset fontScaleX(value: number) {\n\t\t\tthis._fontScaleX = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleX);\n\t\t}\n\n\t\t/**\n\t\t * Sets the vertical font scaling property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset fontScaleY(value: number) {\n\t\t\tthis._fontScaleY = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleY);\n\t\t}\n\n\t\t/**\n\t\t * Sets the letter spacing property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset letterSpacing(value: number) {\n\t\t\tthis._letterSpacing = SpanStyles._valueOrDefault(value, this._defaultStyle.letterSpacing);\n\t\t}\n\n\t\t/**\n\t\t * Sets the X-axis rotation property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset rotationX(value: number) {\n\t\t\tthis._rotationX = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the Y-axis rotation property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset rotationY(value: number) {\n\t\t\tthis._rotationY = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the Z-axis rotation property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset rotationZ(value: number) {\n\t\t\tthis._rotationZ = SpanStyles._valueOrDefault(value, this._defaultStyle.rotationZ);\n\t\t}\n\n\t\t/**\n\t\t * Sets the X-axis skew property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset skewX(value: number) {\n\t\t\tthis._skewX = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the Y-axis skew property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset skewY(value: number) {\n\t\t\tthis._skewY = value;\n\t\t}\n\n\t\t/**\n\t\t * Gets the primary color property.\n\t\t *\n\t\t * @type {!libjass.parts.Color}\n\t\t */\n\t\tget primaryColor() {\n\t\t\treturn this._primaryColor;\n\t\t}\n\n\t\t/**\n\t\t * Sets the primary color property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tset primaryColor(value: parts.Color) {\n\t\t\tthis._primaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.primaryColor);\n\t\t}\n\n\t\t/**\n\t\t * Sets the secondary color property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tset secondaryColor(value: parts.Color) {\n\t\t\tthis._secondaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.secondaryColor);\n\t\t}\n\n\t\t/**\n\t\t * Sets the outline color property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tset outlineColor(value: parts.Color) {\n\t\t\tthis._outlineColor = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineColor);\n\t\t}\n\n\t\t/**\n\t\t * Sets the shadow color property. null defaults it to the default style's value.\n\t\t *\n\t\t * @type {libjass.parts.Color}\n\t\t */\n\t\tset shadowColor(value: parts.Color) {\n\t\t\tthis._shadowColor = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowColor);\n\t\t}\n\n\t\t/**\n\t\t * Sets the primary alpha property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset primaryAlpha(value: number) {\n\t\t\tthis._primaryAlpha = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the secondary alpha property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset secondaryAlpha(value: number) {\n\t\t\tthis._secondaryAlpha = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the outline alpha property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset outlineAlpha(value: number) {\n\t\t\tthis._outlineAlpha = value;\n\t\t}\n\n\t\t/**\n\t\t * Sets the shadow alpha property.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tset shadowAlpha(value: number) {\n\t\t\tthis._shadowAlpha = value;\n\t\t}\n\n\t\tprivate static _valueOrDefault = <T>(newValue: T, defaultValue: T): T => ((newValue !== null) ? newValue : defaultValue);\n\n\t\tprivate static _getFontSize(fontFamily: string, lineHeight: number, fontSizeElement: HTMLDivElement): number {\n\t\t\tvar existingFontSizeMap = SpanStyles._fontSizeCache.get(fontFamily);\n\t\t\tif (existingFontSizeMap === undefined) {\n\t\t\t\tSpanStyles._fontSizeCache.set(fontFamily, existingFontSizeMap = new Map<number, number>());\n\t\t\t}\n\n\t\t\tvar existingFontSize = existingFontSizeMap.get(lineHeight);\n\t\t\tif (existingFontSize === undefined) {\n\t\t\t\tfontSizeElement.style.fontFamily = fontFamily;\n\t\t\t\tfontSizeElement.style.fontSize = lineHeight + \"px\";\n\t\t\t\texistingFontSizeMap.set(lineHeight, existingFontSize = lineHeight * lineHeight / fontSizeElement.offsetHeight);\n\t\t\t}\n\n\t\t\treturn existingFontSize;\n\t\t}\n\t}\n\n\t/**\n\t * This class represents an ASS drawing - a set of drawing instructions between {\\p} tags.\n\t *\n\t * @constructor\n\t * @param {number} drawingScale\n\t * @param {number} scaleX\n\t * @param {number} scaleY\n\t *\n\t * @private\n\t * @memberof libjass.renderers\n\t */\n\tclass Drawing {\n\t\tprivate _scaleX: number;\n\t\tprivate _scaleY: number;\n\t\tprivate _baselineOffset: number = 0;\n\t\tprivate _instructions: parts.drawing.Instruction[] = [];\n\n\t\tconstructor(drawingScale: number, scaleX: number, scaleY: number) {\n\t\t\tvar scaleFactor = Math.pow(2, drawingScale - 1);\n\t\t\tthis._scaleX = scaleX / scaleFactor;\n\t\t\tthis._scaleY = scaleY / scaleFactor;\n\t\t}\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tset baselineOffset(value: number) {\n\t\t\tthis._baselineOffset = value;\n\t\t}\n\n\t\t/**\n\t\t * @type {!Array.<!libjass.parts.drawing.Instruction>}\n\t\t */\n\t\tset instructions(value: parts.drawing.Instruction[]) {\n\t\t\tthis._instructions = value;\n\t\t}\n\n\t\t/**\n\t\t * Converts this drawing to an <svg> element.\n\t\t *\n\t\t * @param {!libjass.parts.Color} fillColor\n\t\t * @return {!SVGSVGElement}\n\t\t */\n\t\ttoSVG(fillColor: parts.Color): SVGSVGElement {\n\t\t\tvar path = \"\";\n\t\t\tvar bboxWidth = 0;\n\t\t\tvar bboxHeight = 0;\n\n\t\t\tthis._instructions.forEach((instruction: parts.drawing.Instruction) => {\n\t\t\t\tif (instruction instanceof parts.drawing.MoveInstruction) {\n\t\t\t\t\tvar movePart = <parts.drawing.MoveInstruction>instruction;\n\t\t\t\t\tpath += \" M \" + movePart.x + \" \" + (movePart.y + this._baselineOffset);\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, movePart.x);\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, movePart.y + this._baselineOffset);\n\t\t\t\t}\n\t\t\t\telse if (instruction instanceof parts.drawing.LineInstruction) {\n\t\t\t\t\tvar linePart = <parts.drawing.LineInstruction>instruction;\n\t\t\t\t\tpath += \" L \" + linePart.x + \" \" + (linePart.y + this._baselineOffset);\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, linePart.x);\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, linePart.y + this._baselineOffset);\n\t\t\t\t}\n\t\t\t\telse if (instruction instanceof parts.drawing.CubicBezierCurveInstruction) {\n\t\t\t\t\tvar cubicBezierCurvePart = <parts.drawing.CubicBezierCurveInstruction>instruction;\n\t\t\t\t\tpath += \" C \" + cubicBezierCurvePart.x1 + \" \" + (cubicBezierCurvePart.y1 + this._baselineOffset) + \", \" + cubicBezierCurvePart.x2 + \" \" + (cubicBezierCurvePart.y2 + this._baselineOffset) + \", \" + cubicBezierCurvePart.x3 + \" \" + (cubicBezierCurvePart.y3 + this._baselineOffset);\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, cubicBezierCurvePart.x1, cubicBezierCurvePart.x2, cubicBezierCurvePart.x3);\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, cubicBezierCurvePart.y1 + this._baselineOffset, cubicBezierCurvePart.y2 + this._baselineOffset, cubicBezierCurvePart.y3 + this._baselineOffset);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar result =\n\t\t\t\t'<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + (bboxWidth * this._scaleX).toFixed(3) + 'px\" height=\"' + (bboxHeight * this._scaleY).toFixed(3) + 'px\">\\n' +\n\t\t\t\t'\\t<g transform=\"scale(' + this._scaleX.toFixed(3) + ' ' + this._scaleY.toFixed(3) + ')\">\\n' +\n\t\t\t\t'\\t\\t<path d=\"' + path + '\" fill=\"' + fillColor.toString() + '\" />\\n' +\n\t\t\t\t'\\t</g>\\n' +\n\t\t\t\t'</svg>';\n\n\t\t\treturn <SVGSVGElement>domParser.parseFromString(result, \"image/svg+xml\").childNodes[0];\n\t\t}\n\t}\n\n\tvar domParser: DOMParser;\n\tif (typeof DOMParser !== \"undefined\") {\n\t\tdomParser = new DOMParser();\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path=\"libjass.ts\" />\n\nmodule libjass {\n\texport interface StyleMap {\n\t\t[name: string]: Style;\n\t}\n\n\t/**\n\t * This class represents an ASS script. It contains the script properties, an array of Styles, and an array of Dialogues.\n\t *\n\t * @constructor\n\t *\n\t * @memberof libjass\n\t */\n\texport class ASS {\n\t\tprivate _properties: ScriptProperties = new ScriptProperties();\n\t\tprivate _styles: StyleMap = Object.create(null);\n\t\tprivate _dialogues: Dialogue[] = [];\n\n\t\t/**\n\t\t * The properties of this script.\n\t\t *\n\t\t * @type {!libjass.ScriptProperties}\n\t\t */\n\t\tget properties(): ScriptProperties {\n\t\t\treturn this._properties;\n\t\t}\n\n\t\t/**\n\t\t * The styles in this script.\n\t\t *\n\t\t * @type {!Object.<string, !libjass.Style>}\n\t\t */\n\t\tget styles(): StyleMap {\n\t\t\treturn this._styles;\n\t\t}\n\n\t\t/**\n\t\t * The dialogues in this script.\n\t\t *\n\t\t * @type {!Array.<!libjass.Dialogue>}\n\t\t */\n\t\tget dialogues(): Dialogue[] {\n\t\t\treturn this._dialogues;\n\t\t}\n\n\t\tconstructor() {\n\t\t\t// Deprecated constructor argument\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tthrow new Error(\"Constructor `new ASS(rawASS)` has been deprecated. Use `ASS.fromString(rawASS)` instead.\");\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates an ASS object from the raw text of an ASS script.\n\t\t *\n\t\t * @param {string} rawASS The raw text of the ASS script.\n\t\t * @return {!libjass.ASS}\n\t\t *\n\t\t * @static\n\t\t */\n\t\tstatic fromString(rawASS: string): ASS {\n\t\t\trawASS = rawASS.replace(/\\r$/gm, \"\");\n\n\t\t\tvar script = parser.parse(rawASS, \"script\");\n\n\t\t\tvar result = new ASS();\n\n\t\t\t// Get the script info template\n\t\t\tvar infoTemplate: Template = script[\"Script Info\"];\n\n\t\t\tif (libjass.verboseMode) {\n\t\t\t\tconsole.log(\"Read script info: \" + JSON.stringify(infoTemplate), infoTemplate);\n\t\t\t}\n\n\t\t\t// Parse the script properties\n\t\t\tresult.properties.resolutionX = parseInt(infoTemplate[\"PlayResX\"]);\n\t\t\tresult.properties.resolutionY = parseInt(infoTemplate[\"PlayResY\"]);\n\t\t\tresult.properties.wrappingStyle = parseInt(infoTemplate[\"WrapStyle\"]);\n\t\t\tresult.properties.scaleBorderAndShadow = (infoTemplate[\"ScaledBorderAndShadow\"] === \"yes\");\n\n\t\t\t// Get styles from the styles section\n\t\t\tscript[\"V4+ Styles\"].forEach((line: any) => {\n\t\t\t\tif (line.type === \"Style\") {\n\t\t\t\t\tvar styleTemplate: Template = line.template;\n\n\t\t\t\t\tif (libjass.verboseMode) {\n\t\t\t\t\t\tconsole.log(\"Read style: \" + JSON.stringify(styleTemplate), styleTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the style and add it to the styles map\n\t\t\t\t\tvar newStyle = new Style(styleTemplate);\n\t\t\t\t\tresult.styles[newStyle.name] = newStyle;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get dialogues from the events section\n\t\t\tscript[\"Events\"].forEach((line: any) => {\n\t\t\t\tif (line.type === \"Dialogue\") {\n\t\t\t\t\tvar dialogueTemplate: Template = line.template;\n\n\t\t\t\t\tif (libjass.verboseMode) {\n\t\t\t\t\t\tconsole.log(\"Read dialogue: \" + JSON.stringify(dialogueTemplate), dialogueTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the dialogue and add it to the dialogues array\n\t\t\t\t\tresult.dialogues.push(new Dialogue(dialogueTemplate, result));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\texport enum WrappingStyle {\n\t\tSmartWrappingWithWiderTopLine = 0,\n\t\tSmartWrappingWithWiderBottomLine = 3,\n\t\tEndOfLineWrapping = 1,\n\t\tNoLineWrapping = 2,\n\t}\n\n\t/**\n\t * This class represents the properties of an ASS script.\n\t *\n\t * @constructor\n\t *\n\t * @memberof libjass\n\t */\n\texport class ScriptProperties {\n\t\tprivate _resolutionX: number;\n\t\tprivate _resolutionY: number;\n\t\tprivate _wrappingStyle: WrappingStyle;\n\t\tprivate _scaleBorderAndShadow: boolean;\n\n\t\t/**\n\t\t * The horizontal script resolution.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget resolutionX(): number {\n\t\t\treturn this._resolutionX;\n\t\t}\n\n\t\t/**\n\t\t * The horizontal script resolution.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tset resolutionX(value: number) {\n\t\t\tthis._resolutionX = value;\n\t\t}\n\n\t\t/**\n\t\t * The vertical script resolution.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget resolutionY(): number {\n\t\t\treturn this._resolutionY;\n\t\t}\n\n\t\t/**\n\t\t * The vertical script resolution.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tset resolutionY(value: number) {\n\t\t\tthis._resolutionY = value;\n\t\t}\n\n\t\t/**\n\t\t * The wrap style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget wrappingStyle(): WrappingStyle {\n\t\t\treturn this._wrappingStyle;\n\t\t}\n\n\t\t/**\n\t\t * The wrap style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tset wrappingStyle(value: WrappingStyle) {\n\t\t\tthis._wrappingStyle = value;\n\t\t}\n\n\t\t/**\n\t\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget scaleBorderAndShadow(): boolean {\n\t\t\treturn this._scaleBorderAndShadow;\n\t\t}\n\n\t\t/**\n\t\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tset scaleBorderAndShadow(value: boolean) {\n\t\t\tthis._scaleBorderAndShadow = value;\n\t\t}\n\t}\n\n\texport enum BorderStyle {\n\t\tOutline = 1,\n\t\tOpaqueBox = 3,\n\t}\n\n\t/**\n\t * This class represents a single global style declaration in an ASS script. The styles can be obtained via the ASS.styles property.\n\t *\n\t * @constructor\n\t * @param {!Object} template The template object that contains the style's properties. It is a map of the string values read from the ASS file.\n\t * @param {string} template[\"Name\"] The name of the style\n\t * @param {string} template[\"Italic\"] -1 if the style is italicized\n\t * @param {string} template[\"Bold\"] -1 if the style is bold\n\t * @param {string} template[\"Underline\"] -1 if the style is underlined\n\t * @param {string} template[\"StrikeOut\"] -1 if the style is struck-through\n\t * @param {string} template[\"Fontname\"] The name of the font\n\t * @param {string} template[\"Fontsize\"] The size of the font\n\t * @param {string} template[\"ScaleX\"] The horizontal scaling of the font\n\t * @param {string} template[\"ScaleY\"] The vertical scaling of the font\n\t * @param {string} template[\"Spacing\"] The letter spacing of the font\n\t * @param {string} template[\"PrimaryColour\"] The primary color\n\t * @param {string} template[\"OutlineColour\"] The outline color\n\t * @param {string} template[\"BackColour\"] The shadow color\n\t * @param {string} template[\"Outline\"] The outline thickness\n\t * @param {string} template[\"Shadow\"] The shadow depth\n\t * @param {string} template[\"Alignment\"] The alignment number\n\t * @param {string} template[\"MarginL\"] The left margin\n\t * @param {string} template[\"MarginR\"] The right margin\n\t * @param {string} template[\"MarginV\"] The vertical margin\n\t *\n\t * @memberof libjass\n\t */\n\texport class Style {\n\t\tprivate _name: string;\n\n\t\tprivate _italic: boolean;\n\t\tprivate _bold: boolean;\n\t\tprivate _underline: boolean;\n\t\tprivate _strikeThrough: boolean;\n\n\t\tprivate _fontName: string;\n\t\tprivate _fontSize: number;\n\n\t\tprivate _fontScaleX: number;\n\t\tprivate _fontScaleY: number;\n\n\t\tprivate _letterSpacing: number;\n\n\t\tprivate _rotationZ: number;\n\n\t\tprivate _primaryColor: parts.Color;\n\t\tprivate _secondaryColor: parts.Color;\n\t\tprivate _outlineColor: parts.Color;\n\t\tprivate _shadowColor: parts.Color;\n\n\t\tprivate _outlineThickness: number;\n\t\tprivate _borderStyle: BorderStyle;\n\n\t\tprivate _shadowDepth: number;\n\n\t\tprivate _alignment: number;\n\n\t\tprivate _marginLeft: number;\n\t\tprivate _marginRight: number;\n\t\tprivate _marginVertical: number;\n\n\t\tconstructor(template: Template) {\n\t\t\tthis._name = template[\"Name\"];\n\n\t\t\tthis._italic = template[\"Italic\"] === \"-1\";\n\t\t\tthis._bold = template[\"Bold\"] === \"-1\";\n\t\t\tthis._underline = template[\"Underline\"] === \"-1\";\n\t\t\tthis._strikeThrough = template[\"StrikeOut\"] === \"-1\";\n\n\t\t\tthis._fontName = template[\"Fontname\"];\n\t\t\tthis._fontSize = parseFloat(template[\"Fontsize\"]);\n\n\t\t\tthis._fontScaleX = parseFloat(template[\"ScaleX\"]) / 100;\n\t\t\tthis._fontScaleY = parseFloat(template[\"ScaleY\"]) / 100;\n\n\t\t\tthis._letterSpacing = parseFloat(template[\"Spacing\"]);\n\n\t\t\tthis._rotationZ = parseFloat(template[\"Angle\"]);\n\n\t\t\tthis._primaryColor = <parts.Color>parser.parse(template[\"PrimaryColour\"], \"colorWithAlpha\");\n\t\t\tthis._secondaryColor = <parts.Color>parser.parse(template[\"SecondaryColour\"], \"colorWithAlpha\");\n\t\t\tthis._outlineColor = <parts.Color>parser.parse(template[\"OutlineColour\"], \"colorWithAlpha\");\n\t\t\tthis._shadowColor = <parts.Color>parser.parse(template[\"BackColour\"], \"colorWithAlpha\");\n\n\t\t\tthis._outlineThickness = parseFloat(template[\"Outline\"]);\n\t\t\tthis._borderStyle = parseInt(template[\"BorderStyle\"]);\n\n\t\t\tthis._shadowDepth = parseFloat(template[\"Shadow\"]);\n\n\t\t\tthis._alignment = parseInt(template[\"Alignment\"]);\n\n\t\t\tthis._marginLeft = parseFloat(template[\"MarginL\"]);\n\t\t\tthis._marginRight = parseFloat(template[\"MarginR\"]);\n\t\t\tthis._marginVertical = parseFloat(template[\"MarginV\"]);\n\t\t}\n\n\t\t/**\n\t\t * The name of this style.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget name(): string {\n\t\t\treturn this._name;\n\t\t}\n\n\t\t/**\n\t\t * Whether this style is italicized or not.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget italic(): boolean {\n\t\t\treturn this._italic;\n\t\t}\n\n\t\t/**\n\t\t * Whether this style is bold or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget bold(): boolean {\n\t\t\treturn this._bold;\n\t\t}\n\n\t\t/**\n\t\t * Whether this style is underlined or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget underline(): boolean {\n\t\t\treturn this._underline;\n\t\t}\n\n\t\t/**\n\t\t * Whether this style is struck-through or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tget strikeThrough(): boolean {\n\t\t\treturn this._strikeThrough;\n\t\t}\n\n\t\t/**\n\t\t * The name of this style's font.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tget fontName(): string {\n\t\t\treturn this._fontName;\n\t\t}\n\n\t\t/**\n\t\t * The size of this style's font.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget fontSize(): number {\n\t\t\treturn this._fontSize;\n\t\t}\n\n\t\t/**\n\t\t * The horizontal scaling of this style's font.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget fontScaleX(): number {\n\t\t\treturn this._fontScaleX;\n\t\t}\n\n\t\t/**\n\t\t * The vertical scaling of this style's font.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget fontScaleY(): number {\n\t\t\treturn this._fontScaleY;\n\t\t}\n\n\t\t/**\n\t\t * The letter spacing scaling of this style's font.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget letterSpacing(): number {\n\t\t\treturn this._letterSpacing;\n\t\t}\n\n\t\t/**\n\t\t * The default Z-rotation of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget rotationZ(): number {\n\t\t\treturn this._rotationZ;\n\t\t}\n\n\t\t/**\n\t\t * The color of this style's font.\n\t\t *\n\t\t * @type {!libjass.parts.Color}\n\t\t */\n\t\tget primaryColor(): parts.Color {\n\t\t\treturn this._primaryColor;\n\t\t}\n\n\t\t/**\n\t\t * The alternate color of this style's font, used in karaoke.\n\t\t *\n\t\t * @type {!libjass.parts.Color}\n\t\t */\n\t\tget secondaryColor(): parts.Color {\n\t\t\treturn this._secondaryColor;\n\t\t}\n\n\t\t/**\n\t\t * The color of this style's outline.\n\t\t *\n\t\t * @type {!libjass.parts.Color}\n\t\t */\n\t\tget outlineColor(): parts.Color {\n\t\t\treturn this._outlineColor;\n\t\t}\n\n\t\t/**\n\t\t * The color of this style's shadow.\n\t\t *\n\t\t * @type {!libjass.parts.Color}\n\t\t */\n\t\tget shadowColor(): parts.Color {\n\t\t\treturn this._shadowColor;\n\t\t}\n\n\t\t/**\n\t\t * The thickness of this style's outline.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget outlineThickness(): number {\n\t\t\treturn this._outlineThickness;\n\t\t}\n\n\t\t/**\n\t\t * The border style of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget borderStyle(): BorderStyle {\n\t\t\treturn this._borderStyle;\n\t\t}\n\n\t\t/**\n\t\t * The depth of this style's shadow.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget shadowDepth(): number {\n\t\t\treturn this._shadowDepth;\n\t\t}\n\n\t\t/**\n\t\t * The alignment of dialogues of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget alignment(): number {\n\t\t\treturn this._alignment;\n\t\t}\n\n\t\t/**\n\t\t * The left margin of dialogues of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget marginLeft(): number {\n\t\t\treturn this._marginLeft;\n\t\t}\n\n\t\t/**\n\t\t * The right margin of dialogues of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget marginRight(): number {\n\t\t\treturn this._marginRight;\n\t\t}\n\n\t\t/**\n\t\t * The vertical margin of dialogues of this style.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget marginVertical(): number {\n\t\t\treturn this._marginVertical;\n\t\t}\n\t};\n\n\t/**\n\t * This class represents a dialogue in an ASS script.\n\t *\n\t * @constructor\n\t * @param {!Object} template The template object that contains the dialogue's properties. It is a map of the string values read from the ASS file.\n\t * @param {string} template[\"Style\"] The name of the default style of this dialogue\n\t * @param {string} template[\"Start\"] The start time\n\t * @param {string} template[\"End\"] The end time\n\t * @param {string} template[\"Layer\"] The layer number\n\t * @param {string} template[\"Text\"] The text of this dialogue\n\t * @param {ASS} ass The ASS object to which this dialogue belongs\n\t *\n\t * @memberof libjass\n\t */\n\texport class Dialogue {\n\t\tprivate static _lastDialogueId = -1;\n\n\t\tprivate _id: number;\n\n\t\tprivate _style: Style;\n\n\t\tprivate _start: number;\n\t\tprivate _end: number;\n\n\t\tprivate _layer: number;\n\t\tprivate _alignment: number;\n\n\t\tprivate _rawPartsString: string;\n\t\tprivate _parts: parts.Part[] = null;\n\n\t\tprivate _sub: HTMLDivElement = null;\n\n\t\tconstructor(template: Template, ass: ASS) {\n\t\t\tthis._id = ++Dialogue._lastDialogueId;\n\n\t\t\tthis._style = ass.styles[template[\"Style\"]];\n\n\t\t\tthis._start = Dialogue._toTime(template[\"Start\"]);\n\t\t\tthis._end = Dialogue._toTime(template[\"End\"]);\n\n\t\t\tthis._layer = Math.max(parseInt(template[\"Layer\"]), 0);\n\n\t\t\tthis._rawPartsString = template[\"Text\"];\n\t\t}\n\n\t\t/**\n\t\t * The unique ID of this dialogue. Auto-generated.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget id(): number {\n\t\t\treturn this._id;\n\t\t}\n\n\t\t/**\n\t\t * The start time of this dialogue.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget start(): number {\n\t\t\treturn this._start;\n\t\t}\n\n\t\t/**\n\t\t * The end time of this dialogue.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget end(): number {\n\t\t\treturn this._end;\n\t\t}\n\n\t\tget style(): Style {\n\t\t\treturn this._style;\n\t\t}\n\n\t\t/**\n\t\t * The alignment number of this dialogue.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget alignment(): number {\n\t\t\tif (this._parts === null) {\n\t\t\t\tthis._parsePartsString();\n\t\t\t}\n\n\t\t\treturn this._alignment;\n\t\t}\n\n\t\t/**\n\t\t * The layer number of this dialogue.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tget layer(): number {\n\t\t\treturn this._layer;\n\t\t}\n\n\t\t/**\n\t\t * The parts of this dialogue.\n\t\t *\n\t\t * @type {!Array.<!libjass.parts.Tag>}\n\t\t */\n\t\tget parts(): parts.Part[] {\n\t\t\tif (this._parts === null) {\n\t\t\t\tthis._parsePartsString();\n\t\t\t}\n\n\t\t\treturn this._parts;\n\t\t}\n\n\t\t/**\n\t\t * @return {string} A simple representation of this dialogue's properties and tags.\n\t\t */\n\t\ttoString(): string {\n\t\t\treturn \"#\" + this._id + \" [\" + this._start.toFixed(3) + \"-\" + this._end.toFixed(3) + \"] \" + ((this._parts !== null) ? this._parts.join(\", \") : this._rawPartsString);\n\t\t}\n\n\t\t/**\n\t\t * Parses this dialogue's parts from the raw parts string.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tprivate _parsePartsString(): void {\n\t\t\tthis._parts = <parts.Part[]>parser.parse(this._rawPartsString, \"dialogueParts\");\n\n\t\t\tthis._alignment = this._style.alignment;\n\n\t\t\tthis._parts.forEach((part, index) => {\n\t\t\t\tif (part instanceof parts.Alignment) {\n\t\t\t\t\tthis._alignment = (<parts.Alignment>part).value;\n\t\t\t\t}\n\t\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\t\tvar movePart = <parts.Move>part;\n\n\t\t\t\t\tif (movePart.t1 === null || movePart.t2 === null) {\n\t\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\t\tnew parts.Move(\n\t\t\t\t\t\t\t\tmovePart.x1, movePart.y1, movePart.x2, movePart.y2,\n\t\t\t\t\t\t\t\t0, this._end - this._start\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (part instanceof parts.Transform) {\n\t\t\t\t\tvar transformPart = <parts.Transform>part;\n\n\t\t\t\t\tif (transformPart.start === null || transformPart.end === null || transformPart.accel === null) {\n\t\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\t\tnew parts.Transform(\n\t\t\t\t\t\t\t\t(transformPart.start === null) ? 0 : transformPart.start,\n\t\t\t\t\t\t\t\t(transformPart.end === null) ? (this._end - this._start) : transformPart.end,\n\t\t\t\t\t\t\t\t(transformPart.accel === null) ? 1 : transformPart.accel,\n\t\t\t\t\t\t\t\ttransformPart.tags\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (libjass.debugMode) {\n\t\t\t\tvar possiblyIncorrectParses = this._parts.filter(part => part instanceof parts.Comment && (<parts.Comment>part).value.indexOf(\"\\\\\") !== -1);\n\t\t\t\tif (possiblyIncorrectParses.length > 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Possible incorrect parse:\\n\" +\n\t\t\t\t\t\tthis._rawPartsString + \"\\n\" +\n\t\t\t\t\t\t\"was parsed as\\n\" +\n\t\t\t\t\t\tthis.toString() + \"\\n\" +\n\t\t\t\t\t\t\"The possibly incorrect parses are:\\n\" +\n\t\t\t\t\t\tpossiblyIncorrectParses.join(\"\\n\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Converts this string into the number of seconds it represents. This string must be in the form of hh:mm:ss.MMM\n\t\t *\n\t\t * @param {string} str\n\t\t * @return {number}\n\t\t *\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\tprivate static _toTime(str: string): number {\n\t\t\treturn str.split(\":\").reduce<number>((previousValue, currentValue) => previousValue * 60 + parseFloat(currentValue), 0);\n\t\t}\n\t}\n\n\t/**\n\t * A template object. It is a map of string keys and string values.\n\t */\n\texport interface Template {\n\t\t[key: string]: string;\n\t}\n\n\t/**\n\t * Debug mode. When true, libjass logs some debug messages.\n\t *\n\t * @type {boolean}\n\t */\n\texport var debugMode: boolean = false;\n\n\t/**\n\t * Verbose debug mode. When true, libjass logs some more debug messages. This setting is independent of debugMode.\n\t *\n\t * @type {boolean}\n\t */\n\texport var verboseMode: boolean = false;\n}\n"]}